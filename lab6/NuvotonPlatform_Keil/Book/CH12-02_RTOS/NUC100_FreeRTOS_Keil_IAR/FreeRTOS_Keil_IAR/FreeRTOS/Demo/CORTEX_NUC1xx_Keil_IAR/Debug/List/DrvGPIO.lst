###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V5.41.2.51793/W32 for ARM     28/Jun/2010  13:54:10 #
# Copyright (C) 1999-2010 IAR Systems AB.                                     #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  \\10.130.11.37\FreeRTOS\FreeRTOS\Demo\CORTEX_NUC1xx_Keil #
#                    _IAR\NUC1xxBSP\NuvotonPlatform_Keil\Src\Driver\DrvGPIO.c #
#    Command line =  \\10.130.11.37\FreeRTOS\FreeRTOS\Demo\CORTEX_NUC1xx_Keil #
#                    _IAR\NUC1xxBSP\NuvotonPlatform_Keil\Src\Driver\DrvGPIO.c #
#                     -D IAR_ARM_CM0 -lCN \\10.130.11.37\FreeRTOS\FreeRTOS\De #
#                    mo\CORTEX_NUC1xx_Keil_IAR\Debug\List\ --diag_suppress    #
#                    Pe550,Pa082,Pa039 -o \\10.130.11.37\FreeRTOS\FreeRTOS\De #
#                    mo\CORTEX_NUC1xx_Keil_IAR\Debug\Obj\ --no_cse            #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M0 -e --fpu=None --dlib_config "D:\Program  #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    5.4\arm\INC\DLib_Config_Full.h" -I                       #
#                    \\10.130.11.37\FreeRTOS\FreeRTOS\Demo\CORTEX_NUC1xx_Keil #
#                    _IAR\..\common\include\ -I \\10.130.11.37\FreeRTOS\FreeR #
#                    TOS\Demo\CORTEX_NUC1xx_Keil_IAR\..\..\source\include\    #
#                    -I \\10.130.11.37\FreeRTOS\FreeRTOS\Demo\CORTEX_NUC1xx_K #
#                    eil_IAR\ -I \\10.130.11.37\FreeRTOS\FreeRTOS\Demo\CORTEX #
#                    _NUC1xx_Keil_IAR\NUC1xxBSP\NuvotonPlatform_Keil\Include\ #
#                     -I \\10.130.11.37\FreeRTOS\FreeRTOS\Demo\CORTEX_NUC1xx_ #
#                    Keil_IAR\NUC1xxBSP\NuvotonPlatform_Keil\Include\Driver\  #
#                    -I \\10.130.11.37\FreeRTOS\FreeRTOS\Demo\CORTEX_NUC1xx_K #
#                    eil_IAR\NUC1xxBSP\CMSIS\CM0\ -I                          #
#                    \\10.130.11.37\FreeRTOS\FreeRTOS\Demo\CORTEX_NUC1xx_Keil #
#                    _IAR\User_Demo\include\ -I "D:\Program Files\IAR         #
#                    Systems\Embedded Workbench 5.4\arm\INC\" -Ol             #
#    List file    =  \\10.130.11.37\FreeRTOS\FreeRTOS\Demo\CORTEX_NUC1xx_Keil #
#                    _IAR\Debug\List\DrvGPIO.lst                              #
#    Object file  =  \\10.130.11.37\FreeRTOS\FreeRTOS\Demo\CORTEX_NUC1xx_Keil #
#                    _IAR\Debug\Obj\DrvGPIO.o                                 #
#                                                                             #
#                                                                             #
###############################################################################

\\10.130.11.37\FreeRTOS\FreeRTOS\Demo\CORTEX_NUC1xx_Keil_IAR\NUC1xxBSP\NuvotonPlatform_Keil\Src\Driver\DrvGPIO.c
      1          /*---------------------------------------------------------------------------------------------------------*/
      2          /*                                                                                                         */
      3          /* Copyright(c) 2009 Nuvoton Technology Corp. All rights reserved.                                         */
      4          /*                                                                                                         */
      5          /*---------------------------------------------------------------------------------------------------------*/
      6          #include <stdio.h>
      7          #include "NUC1xx.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __??Code16?? __code __interwork void NVIC_EnableIRQ(IRQn_Type)
   \                     NVIC_EnableIRQ:
   \   00000000   40B2               SXTB     R0,R0
   \   00000002   0100               MOVS     R1,R0
   \   00000004   4909               LSRS     R1,R1,#+5
   \   00000006   0422               MOVS     R2,#+4
   \   00000008   5143               MULS     R1,R2,R1
   \   0000000A   ....               LDR      R2,??DataTable7  ;; 0xe000e100
   \   0000000C   0123               MOVS     R3,#+1
   \   0000000E   C006               LSLS     R0,R0,#+27       ;; ZeroExtS R0,R0,#+27,#+27
   \   00000010   C00E               LSRS     R0,R0,#+27
   \   00000012   8340               LSLS     R3,R3,R0
   \   00000014   5350               STR      R3,[R2, R1]
   \   00000016   7047               BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __??Code16?? __code __interwork void NVIC_DisableIRQ(IRQn_Type)
   \                     NVIC_DisableIRQ:
   \   00000000   40B2               SXTB     R0,R0
   \   00000002   0100               MOVS     R1,R0
   \   00000004   4909               LSRS     R1,R1,#+5
   \   00000006   0422               MOVS     R2,#+4
   \   00000008   5143               MULS     R1,R2,R1
   \   0000000A   ....               LDR      R2,??DataTable7_1  ;; 0xe000e180
   \   0000000C   0123               MOVS     R3,#+1
   \   0000000E   C006               LSLS     R0,R0,#+27       ;; ZeroExtS R0,R0,#+27,#+27
   \   00000010   C00E               LSRS     R0,R0,#+27
   \   00000012   8340               LSLS     R3,R3,R0
   \   00000014   5350               STR      R3,[R2, R1]
   \   00000016   7047               BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __??Code16?? __code __interwork void NVIC_SetPriority(IRQn_Type, int32_t)
   \                     NVIC_SetPriority:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   0200               MOVS     R2,R0
   \   00000004   0B00               MOVS     R3,R1
   \   00000006   52B2               SXTB     R2,R2
   \   00000008   002A               CMP      R2,#+0
   \   0000000A   21D5               BPL      ??NVIC_SetPriority_0
   \   0000000C   52B2               SXTB     R2,R2
   \   0000000E   1007               LSLS     R0,R2,#+28       ;; ZeroExtS R0,R2,#+28,#+28
   \   00000010   000F               LSRS     R0,R0,#+28
   \   00000012   0838               SUBS     R0,R0,#+8
   \   00000014   8008               LSRS     R0,R0,#+2
   \   00000016   0421               MOVS     R1,#+4
   \   00000018   4843               MULS     R0,R1,R0
   \   0000001A   ....               LDR      R1,??DataTable7_2  ;; 0xe000ed1c
   \   0000001C   52B2               SXTB     R2,R2
   \   0000001E   1407               LSLS     R4,R2,#+28       ;; ZeroExtS R4,R2,#+28,#+28
   \   00000020   240F               LSRS     R4,R4,#+28
   \   00000022   083C               SUBS     R4,R4,#+8
   \   00000024   A408               LSRS     R4,R4,#+2
   \   00000026   0425               MOVS     R5,#+4
   \   00000028   6C43               MULS     R4,R5,R4
   \   0000002A   ....               LDR      R5,??DataTable7_2  ;; 0xe000ed1c
   \   0000002C   2C59               LDR      R4,[R5, R4]
   \   0000002E   FF25               MOVS     R5,#+255
   \   00000030   9607               LSLS     R6,R2,#+30       ;; ZeroExtS R6,R2,#+30,#+30
   \   00000032   B60F               LSRS     R6,R6,#+30
   \   00000034   0827               MOVS     R7,#+8
   \   00000036   7E43               MULS     R6,R7,R6
   \   00000038   B540               LSLS     R5,R5,R6
   \   0000003A   AC43               BICS     R4,R4,R5
   \   0000003C   9B01               LSLS     R3,R3,#+6
   \   0000003E   DBB2               UXTB     R3,R3
   \   00000040   9207               LSLS     R2,R2,#+30       ;; ZeroExtS R2,R2,#+30,#+30
   \   00000042   920F               LSRS     R2,R2,#+30
   \   00000044   0825               MOVS     R5,#+8
   \   00000046   6A43               MULS     R2,R5,R2
   \   00000048   9340               LSLS     R3,R3,R2
   \   0000004A   2343               ORRS     R3,R3,R4
   \   0000004C   0B50               STR      R3,[R1, R0]
   \   0000004E   1CE0               B        ??NVIC_SetPriority_1
   \                     ??NVIC_SetPriority_0:
   \   00000050   52B2               SXTB     R2,R2
   \   00000052   1000               MOVS     R0,R2
   \   00000054   8008               LSRS     R0,R0,#+2
   \   00000056   0421               MOVS     R1,#+4
   \   00000058   4843               MULS     R0,R1,R0
   \   0000005A   ....               LDR      R1,??DataTable7_3  ;; 0xe000e400
   \   0000005C   0858               LDR      R0,[R1, R0]
   \   0000005E   FF21               MOVS     R1,#+255
   \   00000060   9407               LSLS     R4,R2,#+30       ;; ZeroExtS R4,R2,#+30,#+30
   \   00000062   A40F               LSRS     R4,R4,#+30
   \   00000064   0825               MOVS     R5,#+8
   \   00000066   6C43               MULS     R4,R5,R4
   \   00000068   A140               LSLS     R1,R1,R4
   \   0000006A   8843               BICS     R0,R0,R1
   \   0000006C   9901               LSLS     R1,R3,#+6
   \   0000006E   C9B2               UXTB     R1,R1
   \   00000070   9307               LSLS     R3,R2,#+30       ;; ZeroExtS R3,R2,#+30,#+30
   \   00000072   9B0F               LSRS     R3,R3,#+30
   \   00000074   0824               MOVS     R4,#+8
   \   00000076   6343               MULS     R3,R4,R3
   \   00000078   9940               LSLS     R1,R1,R3
   \   0000007A   0143               ORRS     R1,R1,R0
   \   0000007C   52B2               SXTB     R2,R2
   \   0000007E   1000               MOVS     R0,R2
   \   00000080   8008               LSRS     R0,R0,#+2
   \   00000082   0422               MOVS     R2,#+4
   \   00000084   5043               MULS     R0,R2,R0
   \   00000086   ....               LDR      R2,??DataTable7_3  ;; 0xe000e400
   \   00000088   1150               STR      R1,[R2, R0]
   \                     ??NVIC_SetPriority_1:
   \   0000008A   F0BD               POP      {R4-R7,PC}       ;; return
      8          #include "DrvGPIO.h"
      9          
     10          /*---------------------------------------------------------------------------------------------------------*/
     11          /* Includes of local headers                                                                               */
     12          /*---------------------------------------------------------------------------------------------------------*/
     13          
     14          /*---------------------------------------------------------------------------------------------------------*/
     15          /* Macro, type and constant definitions                                                                    */
     16          /*---------------------------------------------------------------------------------------------------------*/
     17          #define PORT_OFFSET   0x40
     18          
     19          /*---------------------------------------------------------------------------------------------------------*/
     20          /* Global file scope (static) variables                                                                    */
     21          /*---------------------------------------------------------------------------------------------------------*/

   \                                 In section .bss, align 4
     22          static void (*_pfGPABCallback)(uint32_t u32GpaStatus, uint32_t u32GpbStatus);
   \                     _pfGPABCallback:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     23          static void (*_pfGPCDECallback)(uint32_t u32GpcStatus, uint32_t u32GpdStatus, uint32_t u32GpeStatus);
   \                     _pfGPCDECallback:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     24          static void (*_pfEINT0Callback)(void);
   \                     _pfEINT0Callback:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     25          static void (*_pfEINT1Callback)(void);              		 
   \                     _pfEINT1Callback:
   \   00000000                      DS8 4
     26          
     27          /*---------------------------------------------------------------------------------------------------------*/
     28          /* GPIO A and GPIO B  ISR                                                                                  */
     29          /*---------------------------------------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
     30          void GPAB_IRQHandler(void)
     31          {
   \                     GPAB_IRQHandler:
   \   00000000   80B5               PUSH     {R7,LR}
     32          	uint32_t u32GpaStatus, u32GpbStatus;
     33          	
     34              /* Keep the interrupt source */
     35          	u32GpaStatus = GPIOA->ISRC;
   \   00000002   ....               LDR      R0,??DataTable7_4  ;; 0x50004020
   \   00000004   0068               LDR      R0,[R0, #+0]
     36          	u32GpbStatus = GPIOB->ISRC;
   \   00000006   ....               LDR      R1,??DataTable7_5  ;; 0x50004060
   \   00000008   0968               LDR      R1,[R1, #+0]
     37          
     38              /* Clear the interrupt */
     39              GPIOA->ISRC = u32GpaStatus;
   \   0000000A   ....               LDR      R2,??DataTable7_4  ;; 0x50004020
   \   0000000C   1060               STR      R0,[R2, #+0]
     40              GPIOB->ISRC = u32GpbStatus;
   \   0000000E   ....               LDR      R2,??DataTable7_5  ;; 0x50004060
   \   00000010   1160               STR      R1,[R2, #+0]
     41          
     42              /* Call the callback function of GPIOAB interrupt */
     43              if(_pfGPABCallback)
   \   00000012   ....               LDR      R2,??DataTable7_6  ;; _pfGPABCallback
   \   00000014   1268               LDR      R2,[R2, #+0]
   \   00000016   002A               CMP      R2,#+0
   \   00000018   02D0               BEQ      ??GPAB_IRQHandler_0
     44                  _pfGPABCallback(u32GpaStatus, u32GpbStatus);    
   \   0000001A   ....               LDR      R2,??DataTable7_6  ;; _pfGPABCallback
   \   0000001C   1268               LDR      R2,[R2, #+0]
   \   0000001E   9047               BLX      R2
     45          
     46          }
   \                     ??GPAB_IRQHandler_0:
   \   00000020   01BD               POP      {R0,PC}          ;; return
     47          
     48          /*---------------------------------------------------------------------------------------------------------*/
     49          /* GPIO C,D,E  ISR                                                                                         */
     50          /*---------------------------------------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
     51          void GPCDE_IRQHandler(void)
     52          {
   \                     GPCDE_IRQHandler:
   \   00000000   80B5               PUSH     {R7,LR}
     53          	uint32_t u32GpcStatus, u32GpdStatus, u32GpeStatus;
     54          	
     55              /* Keep the interrupt source */
     56          	u32GpcStatus = GPIOC->ISRC;
   \   00000002   ....               LDR      R0,??DataTable7_7  ;; 0x500040a0
   \   00000004   0068               LDR      R0,[R0, #+0]
     57          	u32GpdStatus = GPIOD->ISRC;
   \   00000006   ....               LDR      R1,??DataTable7_8  ;; 0x500040e0
   \   00000008   0968               LDR      R1,[R1, #+0]
     58          	u32GpeStatus = GPIOE->ISRC;
   \   0000000A   ....               LDR      R2,??DataTable7_9  ;; 0x50004120
   \   0000000C   1268               LDR      R2,[R2, #+0]
     59          
     60              /* Clear the interrupt */
     61              GPIOC->ISRC = u32GpcStatus;
   \   0000000E   ....               LDR      R3,??DataTable7_7  ;; 0x500040a0
   \   00000010   1860               STR      R0,[R3, #+0]
     62              GPIOD->ISRC = u32GpdStatus;
   \   00000012   ....               LDR      R3,??DataTable7_8  ;; 0x500040e0
   \   00000014   1960               STR      R1,[R3, #+0]
     63              GPIOE->ISRC = u32GpeStatus;
   \   00000016   ....               LDR      R3,??DataTable7_9  ;; 0x50004120
   \   00000018   1A60               STR      R2,[R3, #+0]
     64          
     65              /* Call the callback function of GPIOAB interrupt */
     66              if(_pfGPCDECallback)
   \   0000001A   ....               LDR      R3,??DataTable7_10  ;; _pfGPCDECallback
   \   0000001C   1B68               LDR      R3,[R3, #+0]
   \   0000001E   002B               CMP      R3,#+0
   \   00000020   02D0               BEQ      ??GPCDE_IRQHandler_0
     67                  _pfGPCDECallback(u32GpcStatus, u32GpdStatus, u32GpeStatus);    
   \   00000022   ....               LDR      R3,??DataTable7_10  ;; _pfGPCDECallback
   \   00000024   1B68               LDR      R3,[R3, #+0]
   \   00000026   9847               BLX      R3
     68          
     69          }
   \                     ??GPCDE_IRQHandler_0:
   \   00000028   01BD               POP      {R0,PC}          ;; return
     70          
     71          /*---------------------------------------------------------------------------------------------------------*/
     72          /* External INT0 & INT1  ISR                                                                               */
     73          /*---------------------------------------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
     74          void EINT0_IRQHandler(void)
     75          {
   \                     EINT0_IRQHandler:
   \   00000000   80B5               PUSH     {R7,LR}
     76              /* EINT0 = GPB14. Clear the interrupt */
     77            	GPIOB->ISRC  = 1UL << 14;
   \   00000002   ....               LDR      R0,??DataTable7_5  ;; 0x50004060
   \   00000004   8021               MOVS     R1,#+128
   \   00000006   C901               LSLS     R1,R1,#+7        ;; #+16384
   \   00000008   0160               STR      R1,[R0, #+0]
     78          	if(_pfEINT0Callback)
   \   0000000A   ....               LDR      R0,??DataTable7_11  ;; _pfEINT0Callback
   \   0000000C   0068               LDR      R0,[R0, #+0]
   \   0000000E   0028               CMP      R0,#+0
   \   00000010   02D0               BEQ      ??EINT0_IRQHandler_0
     79                  _pfEINT0Callback();
   \   00000012   ....               LDR      R0,??DataTable7_11  ;; _pfEINT0Callback
   \   00000014   0068               LDR      R0,[R0, #+0]
   \   00000016   8047               BLX      R0
     80          }
   \                     ??EINT0_IRQHandler_0:
   \   00000018   01BD               POP      {R0,PC}          ;; return
     81          

   \                                 In section .text, align 2, keep-with-next
     82          void EINT1_IRQHandler(void)
     83          {
   \                     EINT1_IRQHandler:
   \   00000000   80B5               PUSH     {R7,LR}
     84              /* EINT0 = GPB15. Clear the interrupt */
     85            	GPIOB->ISRC  = 1UL << 15;
   \   00000002   ....               LDR      R0,??DataTable7_5  ;; 0x50004060
   \   00000004   8021               MOVS     R1,#+128
   \   00000006   0902               LSLS     R1,R1,#+8        ;; #+32768
   \   00000008   0160               STR      R1,[R0, #+0]
     86          	if(_pfEINT1Callback)
   \   0000000A   ....               LDR      R0,??DataTable7_12  ;; _pfEINT1Callback
   \   0000000C   0068               LDR      R0,[R0, #+0]
   \   0000000E   0028               CMP      R0,#+0
   \   00000010   02D0               BEQ      ??EINT1_IRQHandler_0
     87                  _pfEINT1Callback();
   \   00000012   ....               LDR      R0,??DataTable7_12  ;; _pfEINT1Callback
   \   00000014   0068               LDR      R0,[R0, #+0]
   \   00000016   8047               BLX      R0
     88          }
   \                     ??EINT1_IRQHandler_0:
   \   00000018   01BD               POP      {R0,PC}          ;; return
     89          
     90          /*---------------------------------------------------------------------------------------------------------*/
     91          /* Function:     DrvGPIO_SetCallbackFunctions                                                              */
     92          /*                                                                                                         */
     93          /* Parameter:        																					   */	
     94          /*	             pfGPABCallback  - [in] The callback function of GPA and GPB interrupts.                   */
     95          /*	             pfGPCDECallback - [in] The callback function of GPC, GPD and GPE interrupts.              */
     96          /*	             pfEINT0Callback - [in] The callback function of EINT0 interrupts.                         */
     97          /*	             pfEINT1Callback - [in] The callback function of EINT1 interrupts.                         */
     98          /* Returns:                                                                                                */
     99          /*               None                                                                                      */
    100          /*                                                                                                         */
    101          /* Description:                                                                                            */
    102          /*               To install GPIO interrrupt callback functions                                             */
    103          /*---------------------------------------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    104          void DrvGPIO_SetIntCallback(
    105              GPIO_GPAB_CALLBACK pfGPABCallback, 
    106              GPIO_GPCDE_CALLBACK pfGPCDECallback 
    107          )
    108          {
    109              _pfGPABCallback  = (void (*)(uint32_t, uint32_t))pfGPABCallback;
   \                     DrvGPIO_SetIntCallback:
   \   00000000   ....               LDR      R2,??DataTable7_6  ;; _pfGPABCallback
   \   00000002   1060               STR      R0,[R2, #+0]
    110              _pfGPCDECallback = (void (*)(uint32_t, uint32_t, uint32_t))pfGPCDECallback;    
   \   00000004   ....               LDR      R0,??DataTable7_10  ;; _pfGPCDECallback
   \   00000006   0160               STR      R1,[R0, #+0]
    111          }
   \   00000008   7047               BX       LR               ;; return
    112          
    113          
    114          /*---------------------------------------------------------------------------------------------------------*/
    115          /* Function:     DrvGPIO_InitFunction                                                                      */
    116          /*                                                                                                         */
    117          /* Parameter:        																					   */	
    118          /*	             function   -[in] Specified GPIO port. It could be                                         */
    119          /*          					  FUNC_GPIO, FUNC_PWMT, FUNC_I2C0, FUNC_I2C1, FUNC_ADC,                    */
    120          /*          					  FUNC_EXTINT, FUNC_CPO, FUNC_TMR0, FUNC_TMR1, FUNC_TMR2,                  */
    121          /*          					  FUNC_TMR3, FUNC_UART0, FUNC_UART1, FUNC_COMP0,                           */
    122          /*          					  FUNC_COMP1, FUNC_CAN0, FUNC_CAN1, FUNC_SPI0,FUNC_SPI1,                   */
    123          /*          					  FUNC_SPI2, FUNC_SPI3.                                                    */
    124          /*	             option  	-[in] Select the different pin to output the specified function                */
    125          /*						          Function    |      IO                                                    */
    126          /*						      ------------------------------------------                                   */
    127          /*						          FUNC_GPIO   |      |   All GPIO                                          */
    128          /*						          FUNC_PWMT   |      |   GPA12 ~ GPA15                                     */
    129          /*						          FUNC_I2C0   |      |   GPA8  , GPA9                                      */
    130          /*						          FUNC_I2C1   |      |   GPA10 , GPA11                                     */
    131          /*						          FUNC_ADC    |      |   GPA0  ~ GPA7                                      */
    132          /*						          FUNC_EXTINT |      |   GPB14 , GPB15                                     */
    133          /*						          FUNC_CPO    |      |   GPB12 , GPB13                                     */
    134          /*						          FUNC_TMR0   |      |   GPB8                                              */
    135          /*						          FUNC_TMR1   |      |   GPB9                                              */
    136          /*						          FUNC_TMR2   |      |   GPB10                                             */
    137          /*						          FUNC_TMR3   |      |   GPB11                                             */
    138          /*						          FUNC_UART0  |      |   GPB0  ~ GPB3                                      */
    139          /*						          FUNC_UART1  |      |   GPB4  ~ GPB7                                      */
    140          /*						          FUNC_COMP0  |      |   GPC6  , GPC7                                      */
    141          /*						          FUNC_COMP1  |      |   GPC14 ~ GPC15                                     */
    142          /*						          FUNC_CAN0   |      |   GPD6  , GPD7                                      */
    143          /*						          FUNC_CAN1   |      |   GPD14 , GPD15                                     */            
    144          /*						          FUNC_SPI0   |      |   GPC0  ~ GPC5                                      */
    145          /*						          FUNC_SPI1   |      |   GPC8  ~ GPC13                                     */
    146          /*						          FUNC_SPI2   |      |   GPD0  ~ GPD5                                      */
    147          /*						          FUNC_SPI3   |      |   GPD8  ~ GPD13                                     */
    148          /* Returns:                                                                                                */
    149          /*               E_SUCCESS                                                                                 */
    150          /*               E_DRVGPIO_ARGUMENT  Argument error                                                        */
    151          /* Description:                                                                                            */
    152          /*               To initialize the multi-function pin's of the specified function.                                             */
    153          /*---------------------------------------------------------------------------------------------------------*/

   \                                 In section .text, align 4, keep-with-next
    154          int32_t DrvGPIO_InitFunction(DRVGPIO_FUNC function)
    155          {
   \                     DrvGPIO_InitFunction:
   \   00000000   00B5               PUSH     {LR}
    156            
    157          	switch(function)
   \   00000002   C0B2               UXTB     R0,R0
   \   00000004   0028               CMP      R0,#+0
   \   00000006   59D0               BEQ      ??DrvGPIO_InitFunction_0
   \   00000008   801E               SUBS     R0,R0,#+2
   \   0000000A   00D1               BNE      .+4
   \   0000000C   ACE0               B        ??DrvGPIO_InitFunction_1
   \   0000000E   401E               SUBS     R0,R0,#+1
   \   00000010   00D1               BNE      .+4
   \   00000012   B8E0               B        ??DrvGPIO_InitFunction_2
   \   00000014   801E               SUBS     R0,R0,#+2
   \   00000016   00D1               BNE      .+4
   \   00000018   17E1               B        ??DrvGPIO_InitFunction_3
   \   0000001A   401E               SUBS     R0,R0,#+1
   \   0000001C   00D1               BNE      .+4
   \   0000001E   96E1               B        ??DrvGPIO_InitFunction_4
   \   00000020   401E               SUBS     R0,R0,#+1
   \   00000022   00D1               BNE      .+4
   \   00000024   A0E1               B        ??DrvGPIO_InitFunction_5
   \   00000026   401E               SUBS     R0,R0,#+1
   \   00000028   00D1               BNE      .+4
   \   0000002A   B9E1               B        ??DrvGPIO_InitFunction_6
   \   0000002C   401E               SUBS     R0,R0,#+1
   \   0000002E   00D1               BNE      .+4
   \   00000030   FEE1               B        ??DrvGPIO_InitFunction_7
   \   00000032   401E               SUBS     R0,R0,#+1
   \   00000034   00D1               BNE      .+4
   \   00000036   2BE2               B        ??DrvGPIO_InitFunction_8
   \   00000038   401E               SUBS     R0,R0,#+1
   \   0000003A   00D1               BNE      .+4
   \   0000003C   4DE2               B        ??DrvGPIO_InitFunction_9
   \   0000003E   401E               SUBS     R0,R0,#+1
   \   00000040   00D1               BNE      .+4
   \   00000042   AFE0               B        ??DrvGPIO_InitFunction_10
   \   00000044   401E               SUBS     R0,R0,#+1
   \   00000046   00D1               BNE      .+4
   \   00000048   B3E0               B        ??DrvGPIO_InitFunction_11
   \   0000004A   401E               SUBS     R0,R0,#+1
   \   0000004C   00D1               BNE      .+4
   \   0000004E   B7E0               B        ??DrvGPIO_InitFunction_12
   \   00000050   401E               SUBS     R0,R0,#+1
   \   00000052   00D1               BNE      .+4
   \   00000054   BBE0               B        ??DrvGPIO_InitFunction_13
   \   00000056   401E               SUBS     R0,R0,#+1
   \   00000058   00D1               BNE      .+4
   \   0000005A   BFE0               B        ??DrvGPIO_InitFunction_14
   \   0000005C   401E               SUBS     R0,R0,#+1
   \   0000005E   00D1               BNE      .+4
   \   00000060   C3E0               B        ??DrvGPIO_InitFunction_15
   \   00000062   401E               SUBS     R0,R0,#+1
   \   00000064   00D1               BNE      .+4
   \   00000066   C7E0               B        ??DrvGPIO_InitFunction_16
   \   00000068   401E               SUBS     R0,R0,#+1
   \   0000006A   00D1               BNE      .+4
   \   0000006C   CBE0               B        ??DrvGPIO_InitFunction_17
   \   0000006E   401E               SUBS     R0,R0,#+1
   \   00000070   00D1               BNE      .+4
   \   00000072   D5E0               B        ??DrvGPIO_InitFunction_18
   \   00000074   401E               SUBS     R0,R0,#+1
   \   00000076   00D1               BNE      .+4
   \   00000078   F6E0               B        ??DrvGPIO_InitFunction_19
   \   0000007A   401E               SUBS     R0,R0,#+1
   \   0000007C   00D1               BNE      .+4
   \   0000007E   FBE0               B        ??DrvGPIO_InitFunction_20
   \   00000080   401E               SUBS     R0,R0,#+1
   \   00000082   00D1               BNE      .+4
   \   00000084   06E1               B        ??DrvGPIO_InitFunction_21
   \   00000086   401E               SUBS     R0,R0,#+1
   \   00000088   00D1               BNE      .+4
   \   0000008A   11E1               B        ??DrvGPIO_InitFunction_22
   \   0000008C   401E               SUBS     R0,R0,#+1
   \   0000008E   00D1               BNE      .+4
   \   00000090   1CE1               B        ??DrvGPIO_InitFunction_23
   \   00000092   401E               SUBS     R0,R0,#+1
   \   00000094   00D1               BNE      .+4
   \   00000096   32E1               B        ??DrvGPIO_InitFunction_24
   \   00000098   401E               SUBS     R0,R0,#+1
   \   0000009A   00D1               BNE      .+4
   \   0000009C   48E1               B        ??DrvGPIO_InitFunction_25
   \   0000009E   401E               SUBS     R0,R0,#+1
   \   000000A0   00D1               BNE      .+4
   \   000000A2   70E1               B        ??DrvGPIO_InitFunction_26
   \   000000A4   401E               SUBS     R0,R0,#+1
   \   000000A6   1AD0               BEQ      ??DrvGPIO_InitFunction_27
   \   000000A8   401E               SUBS     R0,R0,#+1
   \   000000AA   27D0               BEQ      ??DrvGPIO_InitFunction_28
   \   000000AC   401E               SUBS     R0,R0,#+1
   \   000000AE   3AD0               BEQ      ??DrvGPIO_InitFunction_29
   \   000000B0   401E               SUBS     R0,R0,#+1
   \   000000B2   4CD0               BEQ      ??DrvGPIO_InitFunction_30
   \   000000B4   401E               SUBS     R0,R0,#+1
   \   000000B6   00D1               BNE      .+4
   \   000000B8   3AE2               B        ??DrvGPIO_InitFunction_31
   \   000000BA   79E2               B        ??DrvGPIO_InitFunction_32
    158          	{
    159          		/*---------------------------------------------------------------------------------------------------------*/
    160          		/* GPIO                                                                                                    */
    161          		/*---------------------------------------------------------------------------------------------------------*/
    162          		case FUNC_GPIO:
    163          		{
    164          		  	outpw(&SYS->GPAMFP,0);
   \                     ??DrvGPIO_InitFunction_0:
   \   000000BC   D748               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   000000BE   0021               MOVS     R1,#+0
   \   000000C0   0160               STR      R1,[R0, #+0]
    165          			outpw(&SYS->GPBMFP,0);
   \   000000C2   D748               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   000000C4   0021               MOVS     R1,#+0
   \   000000C6   0160               STR      R1,[R0, #+0]
    166          			outpw(&SYS->GPCMFP,0);
   \   000000C8   D648               LDR      R0,??DrvGPIO_InitFunction_33+0x8  ;; 0x50000038
   \   000000CA   0021               MOVS     R1,#+0
   \   000000CC   0160               STR      R1,[R0, #+0]
    167          			outpw(&SYS->GPDMFP,0);
   \   000000CE   D648               LDR      R0,??DrvGPIO_InitFunction_33+0xC  ;; 0x5000003c
   \   000000D0   0021               MOVS     R1,#+0
   \   000000D2   0160               STR      R1,[R0, #+0]
    168          			outpw(&SYS->GPEMFP,0);
   \   000000D4   D548               LDR      R0,??DrvGPIO_InitFunction_33+0x10  ;; 0x50000040
   \   000000D6   0021               MOVS     R1,#+0
   \   000000D8   0160               STR      R1,[R0, #+0]
    169          		  	
    170          		}break;
    171          
    172          		/*---------------------------------------------------------------------------------------------------------*/
    173          		/* PWM                                                                                                     */
    174          		/*---------------------------------------------------------------------------------------------------------*/
    175          		case FUNC_PWM01:
    176          		{
    177          		  	SYS->GPAMFP.PWM0 		=1;
    178          		  	SYS->GPAMFP.PWM1 		=1;
    179          		}break;
    180          
    181          		case FUNC_PWM23:
    182          		{
    183          		  	SYS->GPAMFP.PWM2 		=1;
    184          		  	SYS->GPAMFP.PWM3_I2SMCLK=1;
    185          			SYS->ALTMFP.PA15_I2SMCLK=0;
    186          			
    187          		}break;
    188          
    189          		case FUNC_PWM45:
    190          		{
    191          		  	SYS->ALTMFP.PB11_PWM4   =1;
    192          			SYS->GPBMFP.TM3_PWM4	=1;
    193          		  	SYS->GPEMFP.PWM5 		=1;
    194          		}break;
    195          
    196          		case FUNC_PWM67:
    197          		{
    198          		  	SYS->GPEMFP.PWM6 		=1;
    199          		  	SYS->GPEMFP.PWM7 		=1;
    200          		}break;
    201          
    202          
    203          		/*---------------------------------------------------------------------------------------------------------*/
    204          		/* I2C                                                                                                    */
    205          		/*---------------------------------------------------------------------------------------------------------*/
    206          		case FUNC_I2C0:
    207          		{
    208          		  	SYS->GPAMFP.I2C0_SDA 	=1;
    209          			SYS->GPAMFP.I2C0_SCL 	=1;
    210          		}break;		
    211          
    212          		/*---------------------------------------------------------------------------------------------------------*/
    213          		/* I2C1                                                                                                    */
    214          		/*---------------------------------------------------------------------------------------------------------*/
    215          		case FUNC_I2C1:
    216          		{
    217          		  	SYS->GPAMFP.I2C1_SDA 	=1;
    218          			SYS->GPAMFP.I2C1_SCL 	=1;
    219          		}break;
    220          
    221          		/*---------------------------------------------------------------------------------------------------------*/
    222          		/* ADC                                                                                                     */
    223          		/*---------------------------------------------------------------------------------------------------------*/
    224          		case FUNC_ADC0:
    225          		{
    226          			SYS->GPAMFP.ADC0 		=1;
    227          		}break;
    228          
    229          		case FUNC_ADC1:
    230          		{
    231          			SYS->GPAMFP.ADC1 		=1;
    232          		}break;
    233          		
    234          		case FUNC_ADC2:
    235          		{
    236          			SYS->GPAMFP.ADC2 		=1;
    237          		}break;
    238          
    239          		case FUNC_ADC3:
    240          		{
    241          			SYS->GPAMFP.ADC3 		=1;
    242          		}break;
    243          
    244          		case FUNC_ADC4:
    245          		{
    246          			SYS->GPAMFP.ADC4 		=1;
    247          		}break;
    248          
    249          		case FUNC_ADC5:
    250          		{
    251          			SYS->GPAMFP.ADC5 		=1;
    252          		}break;
    253          
    254          		case FUNC_ADC6:
    255          		{
    256          			SYS->GPAMFP.ADC6 		=1;
    257          		}break;
    258          
    259          		case FUNC_ADC7:
    260          		{
    261          			SYS->ALTMFP.PA7_S21   	=0;
    262          			SYS->GPAMFP.ADC7_SS21 	=1;
    263          		}break;
    264          
    265            		/*---------------------------------------------------------------------------------------------------------*/
    266          		/* External Interrupt                                                                                      */
    267          		/*---------------------------------------------------------------------------------------------------------*/
    268          		
    269          	  	case FUNC_EXTINT:
    270          		{	
    271          			SYS->GPBMFP.INT0 		=1;
    272          			SYS->GPBMFP.INT1_SS31 	=1;
    273          			SYS->ALTMFP.PB14_S31    =0;	
    274          		}break;
    275          
    276          		/*---------------------------------------------------------------------------------------------------------*/
    277          		/* Analog Comparator-1 digital output                                                                      */
    278          		/*---------------------------------------------------------------------------------------------------------*/
    279          		case FUNC_CPO:
    280          		{
    281          			SYS->GPBMFP.CPO0_CLKO 	=1;
    282          			SYS->GPBMFP.CPO1 		=1;
    283          		}break;
    284          
    285          
    286          		/*---------------------------------------------------------------------------------------------------------*/
    287          		/* TIMER                                                                                                   */
    288          		/*---------------------------------------------------------------------------------------------------------*/
    289          		case FUNC_TMR0:
    290          		{
    291          			SYS->GPBMFP.TM0 		=1;
    292          		}break;
    293          	
    294          		case FUNC_TMR1:
    295          		{
    296          			SYS->GPBMFP.TM1_SS11 	=1;
    297          			SYS->ALTMFP.PB11_PWM4   =0;	
    298          		}break;
    299          
    300          		case FUNC_TMR2:
    301          		{
    302          			SYS->GPBMFP.TM2_SS01 	=1;	
    303          			SYS->ALTMFP.PB10_S01    =0;	
    304          			
    305          		}break;
    306          
    307          		case FUNC_TMR3:
    308          		{
    309          			SYS->GPBMFP.TM3_PWM4 	=1;	
    310          			SYS->ALTMFP.PB11_PWM4   =0;	
    311          		}break;
    312          
    313          		/*---------------------------------------------------------------------------------------------------------*/
    314          		/* UART                                                                                                    */
    315          		/*--------------------------------------------------------------------------------------------------------*/
    316          		case FUNC_UART0:
    317          		{
    318          			SYS->GPBMFP.UART0_RX 	=1;
    319          			SYS->GPBMFP.UART0_TX 	=1;
    320          			SYS->GPBMFP.UART0_nRTS 	=1;
    321          			SYS->GPBMFP.UART0_nCTS 	=1;
    322          		}break;
    323          
    324          		case FUNC_UART1:
    325          		{
    326          			SYS->GPBMFP.UART1_RX 	=1;
    327          			SYS->GPBMFP.UART1_TX 	=1;
    328          			SYS->GPBMFP.UART1_nRTS 	=1;
    329          			SYS->GPBMFP.UART1_nCTS 	=1;
    330          		}break;
    331          
    332          		case FUNC_UART2:
    333          		{
    334          			SYS->GPDMFP.UART2_RX =1;
    335          			SYS->GPDMFP.UART2_TX =1;
    336          		}break;
    337          
    338          
    339          		/*---------------------------------------------------------------------------------------------------------*/
    340          		/* Comparator                                                                                              */
    341          		/*---------------------------------------------------------------------------------------------------------*/
    342          		case FUNC_ACMP0:	
    343          		{
    344          			SYS->GPCMFP.CPN0 =1;
    345          			SYS->GPCMFP.CPP0 =1;
    346          		}break;
    347          
    348          		case FUNC_ACMP1:
    349          		{
    350          			SYS->GPCMFP.CPN1 =1;
    351          			SYS->GPCMFP.CPP1 =1;
    352          		}break;
    353          
    354          		/*---------------------------------------------------------------------------------------------------------*/
    355          		/* CAN                                                                                                     */
    356          		/*---------------------------------------------------------------------------------------------------------*/
    357          		case FUNC_CAN0:	
    358          		{
    359          			SYS->GPDMFP.CAN0_TX =1;
    360          			SYS->GPDMFP.CAN0_RX =1;
    361          		}break;	
    362          
    363          
    364          		/*---------------------------------------------------------------------------------------------------------*/
    365          		/* SPI                                                                                                     */
    366          		/*---------------------------------------------------------------------------------------------------------*/
    367          		case FUNC_SPI0:	
    368          		{
    369          			SYS->GPCMFP.SPI0_SS0_I2SLRCLK 	=1;
    370          			SYS->GPCMFP.SPI0_CLK_I2SBCLK 	=1;
    371          			SYS->GPCMFP.SPI0_MISO0_I2SDI 	=1;
    372          			SYS->GPCMFP.SPI0_MOSI0_I2SDO 	=1;
    373          			SYS->GPCMFP.SPI0_MISO1 			=1;
    374          			SYS->GPCMFP.SPI0_MOSI1 			=1;
    375          
    376          			SYS->ALTMFP.PC0_I2SLRCLK 		=0;
    377          			SYS->ALTMFP.PC1_I2SBCLK 		=0;
    378          			SYS->ALTMFP.PC2_I2SDI 			=0;
    379          			SYS->ALTMFP.PC3_I2SDO 			=0;
    380          			
    381          		}break;
    382          
    383          		case FUNC_SPI1:
    384          		{
    385          			SYS->GPCMFP.SPI1_SS0 	=1;
    386          			SYS->GPCMFP.SPI1_CLK 	=1;
    387          			SYS->GPCMFP.SPI1_MISO0	=1;
    388          			SYS->GPCMFP.SPI1_MOSI0 	=1;
    389          			SYS->GPCMFP.SPI1_MISO1 	=1;
    390          			SYS->GPCMFP.SPI1_MOSI1 	=1;
    391          		}break;
    392          
    393          		case FUNC_SPI2:	
    394          		{
    395          			/* SPI2 */
    396          			SYS->GPDMFP.SPI2_SS0 	=1;
    397          			SYS->GPDMFP.SPI2_CLK 	=1;
    398          			SYS->GPDMFP.SPI2_MISO0 	=1;
    399          			SYS->GPDMFP.SPI2_MOSI0 	=1;
    400          			SYS->GPDMFP.SPI2_MISO1 	=1;
    401          			SYS->GPDMFP.SPI2_MOSI1 	=1;
    402          		}break;				
    403          
    404          		case FUNC_SPI3:	
    405          		{
    406          			/* SPI3 */
    407          			SYS->GPDMFP.SPI3_SS0 	=1;
    408          			SYS->GPDMFP.SPI3_CLK 	=1;
    409          			SYS->GPDMFP.SPI3_MISO0 	=1;
    410          			SYS->GPDMFP.SPI3_MOSI0 	=1;
    411          			SYS->GPDMFP.SPI3_MISO1 	=1;
    412          			SYS->GPDMFP.SPI3_MOSI1 	=1;
    413          		}break;
    414          
    415          		/*---------------------------------------------------------------------------------------------------------*/
    416          		/* I2S                                                                                                     */
    417          		/*---------------------------------------------------------------------------------------------------------*/
    418          		case FUNC_I2S:	
    419          		{
    420          			SYS->GPCMFP.SPI0_SS0_I2SLRCLK 	=1;
    421          			SYS->GPCMFP.SPI0_CLK_I2SBCLK 	=1;
    422          			SYS->GPCMFP.SPI0_MISO0_I2SDI 	=1;
    423          			SYS->GPCMFP.SPI0_MOSI0_I2SDO 	=1;
    424          			SYS->GPAMFP.PWM3_I2SMCLK    	=1;
    425          			
    426          			SYS->ALTMFP.PC0_I2SLRCLK 		=1;
    427          			SYS->ALTMFP.PC1_I2SBCLK 		=1;
    428          			SYS->ALTMFP.PC2_I2SDI 			=1;
    429          			SYS->ALTMFP.PC3_I2SDO 			=1;
    430          			SYS->ALTMFP.PA15_I2SMCLK		=1;
    431          
    432          		}break;
    433          		
    434          		default:
    435          			return E_DRVGPIO_ARGUMENT;
    436          	}
    437          
    438          	return E_SUCCESS;
   \                     ??DrvGPIO_InitFunction_34:
   \   000000DA   0020               MOVS     R0,#+0
   \                     ??DrvGPIO_InitFunction_35:
   \   000000DC   00BD               POP      {PC}             ;; return
   \                     ??DrvGPIO_InitFunction_27:
   \   000000DE   CF48               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   000000E0   0068               LDR      R0,[R0, #+0]
   \   000000E2   8021               MOVS     R1,#+128
   \   000000E4   4901               LSLS     R1,R1,#+5        ;; #+4096
   \   000000E6   0143               ORRS     R1,R1,R0
   \   000000E8   CC48               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   000000EA   0160               STR      R1,[R0, #+0]
   \   000000EC   CB48               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   000000EE   0068               LDR      R0,[R0, #+0]
   \   000000F0   8021               MOVS     R1,#+128
   \   000000F2   8901               LSLS     R1,R1,#+6        ;; #+8192
   \   000000F4   0143               ORRS     R1,R1,R0
   \   000000F6   C948               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   000000F8   0160               STR      R1,[R0, #+0]
   \   000000FA   EEE7               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_28:
   \   000000FC   C748               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   000000FE   0068               LDR      R0,[R0, #+0]
   \   00000100   8021               MOVS     R1,#+128
   \   00000102   C901               LSLS     R1,R1,#+7        ;; #+16384
   \   00000104   0143               ORRS     R1,R1,R0
   \   00000106   C548               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   00000108   0160               STR      R1,[R0, #+0]
   \   0000010A   C448               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   0000010C   0068               LDR      R0,[R0, #+0]
   \   0000010E   8021               MOVS     R1,#+128
   \   00000110   0902               LSLS     R1,R1,#+8        ;; #+32768
   \   00000112   0143               ORRS     R1,R1,R0
   \   00000114   C148               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   00000116   0160               STR      R1,[R0, #+0]
   \   00000118   DB48               LDR      R0,??DrvGPIO_InitFunction_36  ;; 0x50000050
   \   0000011A   0068               LDR      R0,[R0, #+0]
   \   0000011C   DB49               LDR      R1,??DrvGPIO_InitFunction_36+0x4  ;; 0xfffffdff
   \   0000011E   0140               ANDS     R1,R1,R0
   \   00000120   D948               LDR      R0,??DrvGPIO_InitFunction_36  ;; 0x50000050
   \   00000122   0160               STR      R1,[R0, #+0]
   \   00000124   D9E7               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_29:
   \   00000126   D848               LDR      R0,??DrvGPIO_InitFunction_36  ;; 0x50000050
   \   00000128   0068               LDR      R0,[R0, #+0]
   \   0000012A   1021               MOVS     R1,#+16
   \   0000012C   0143               ORRS     R1,R1,R0
   \   0000012E   D648               LDR      R0,??DrvGPIO_InitFunction_36  ;; 0x50000050
   \   00000130   0160               STR      R1,[R0, #+0]
   \   00000132   BB48               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   00000134   0068               LDR      R0,[R0, #+0]
   \   00000136   8021               MOVS     R1,#+128
   \   00000138   0901               LSLS     R1,R1,#+4        ;; #+2048
   \   0000013A   0143               ORRS     R1,R1,R0
   \   0000013C   B848               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   0000013E   0160               STR      R1,[R0, #+0]
   \   00000140   BA48               LDR      R0,??DrvGPIO_InitFunction_33+0x10  ;; 0x50000040
   \   00000142   0068               LDR      R0,[R0, #+0]
   \   00000144   2021               MOVS     R1,#+32
   \   00000146   0143               ORRS     R1,R1,R0
   \   00000148   B848               LDR      R0,??DrvGPIO_InitFunction_33+0x10  ;; 0x50000040
   \   0000014A   0160               STR      R1,[R0, #+0]
   \   0000014C   C5E7               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_30:
   \   0000014E   B748               LDR      R0,??DrvGPIO_InitFunction_33+0x10  ;; 0x50000040
   \   00000150   0068               LDR      R0,[R0, #+0]
   \   00000152   0121               MOVS     R1,#+1
   \   00000154   0143               ORRS     R1,R1,R0
   \   00000156   B548               LDR      R0,??DrvGPIO_InitFunction_33+0x10  ;; 0x50000040
   \   00000158   0160               STR      R1,[R0, #+0]
   \   0000015A   B448               LDR      R0,??DrvGPIO_InitFunction_33+0x10  ;; 0x50000040
   \   0000015C   0068               LDR      R0,[R0, #+0]
   \   0000015E   0221               MOVS     R1,#+2
   \   00000160   0143               ORRS     R1,R1,R0
   \   00000162   B248               LDR      R0,??DrvGPIO_InitFunction_33+0x10  ;; 0x50000040
   \   00000164   0160               STR      R1,[R0, #+0]
   \   00000166   B8E7               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_1:
   \   00000168   AC48               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   0000016A   0068               LDR      R0,[R0, #+0]
   \   0000016C   8021               MOVS     R1,#+128
   \   0000016E   4900               LSLS     R1,R1,#+1        ;; #+256
   \   00000170   0143               ORRS     R1,R1,R0
   \   00000172   AA48               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   00000174   0160               STR      R1,[R0, #+0]
   \   00000176   A948               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   00000178   0068               LDR      R0,[R0, #+0]
   \   0000017A   8021               MOVS     R1,#+128
   \   0000017C   8900               LSLS     R1,R1,#+2        ;; #+512
   \   0000017E   0143               ORRS     R1,R1,R0
   \   00000180   A648               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   00000182   0160               STR      R1,[R0, #+0]
   \   00000184   A9E7               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_2:
   \   00000186   A548               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   00000188   0068               LDR      R0,[R0, #+0]
   \   0000018A   8021               MOVS     R1,#+128
   \   0000018C   C900               LSLS     R1,R1,#+3        ;; #+1024
   \   0000018E   0143               ORRS     R1,R1,R0
   \   00000190   A248               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   00000192   0160               STR      R1,[R0, #+0]
   \   00000194   A148               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   00000196   0068               LDR      R0,[R0, #+0]
   \   00000198   8021               MOVS     R1,#+128
   \   0000019A   0901               LSLS     R1,R1,#+4        ;; #+2048
   \   0000019C   0143               ORRS     R1,R1,R0
   \   0000019E   9F48               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   000001A0   0160               STR      R1,[R0, #+0]
   \   000001A2   9AE7               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_10:
   \   000001A4   9D48               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   000001A6   0068               LDR      R0,[R0, #+0]
   \   000001A8   0121               MOVS     R1,#+1
   \   000001AA   0143               ORRS     R1,R1,R0
   \   000001AC   9B48               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   000001AE   0160               STR      R1,[R0, #+0]
   \   000001B0   93E7               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_11:
   \   000001B2   9A48               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   000001B4   0068               LDR      R0,[R0, #+0]
   \   000001B6   0221               MOVS     R1,#+2
   \   000001B8   0143               ORRS     R1,R1,R0
   \   000001BA   9848               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   000001BC   0160               STR      R1,[R0, #+0]
   \   000001BE   8CE7               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_12:
   \   000001C0   9648               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   000001C2   0068               LDR      R0,[R0, #+0]
   \   000001C4   0421               MOVS     R1,#+4
   \   000001C6   0143               ORRS     R1,R1,R0
   \   000001C8   9448               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   000001CA   0160               STR      R1,[R0, #+0]
   \   000001CC   85E7               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_13:
   \   000001CE   9348               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   000001D0   0068               LDR      R0,[R0, #+0]
   \   000001D2   0821               MOVS     R1,#+8
   \   000001D4   0143               ORRS     R1,R1,R0
   \   000001D6   9148               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   000001D8   0160               STR      R1,[R0, #+0]
   \   000001DA   7EE7               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_14:
   \   000001DC   8F48               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   000001DE   0068               LDR      R0,[R0, #+0]
   \   000001E0   1021               MOVS     R1,#+16
   \   000001E2   0143               ORRS     R1,R1,R0
   \   000001E4   8D48               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   000001E6   0160               STR      R1,[R0, #+0]
   \   000001E8   77E7               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_15:
   \   000001EA   8C48               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   000001EC   0068               LDR      R0,[R0, #+0]
   \   000001EE   2021               MOVS     R1,#+32
   \   000001F0   0143               ORRS     R1,R1,R0
   \   000001F2   8A48               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   000001F4   0160               STR      R1,[R0, #+0]
   \   000001F6   70E7               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_16:
   \   000001F8   8848               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   000001FA   0068               LDR      R0,[R0, #+0]
   \   000001FC   4021               MOVS     R1,#+64
   \   000001FE   0143               ORRS     R1,R1,R0
   \   00000200   8648               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   00000202   0160               STR      R1,[R0, #+0]
   \   00000204   69E7               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_17:
   \   00000206   A048               LDR      R0,??DrvGPIO_InitFunction_36  ;; 0x50000050
   \   00000208   0068               LDR      R0,[R0, #+0]
   \   0000020A   0421               MOVS     R1,#+4
   \   0000020C   8843               BICS     R0,R0,R1
   \   0000020E   9E49               LDR      R1,??DrvGPIO_InitFunction_36  ;; 0x50000050
   \   00000210   0860               STR      R0,[R1, #+0]
   \   00000212   8248               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   00000214   0068               LDR      R0,[R0, #+0]
   \   00000216   8021               MOVS     R1,#+128
   \   00000218   0143               ORRS     R1,R1,R0
   \   0000021A   8048               LDR      R0,??DrvGPIO_InitFunction_33  ;; 0x50000030
   \   0000021C   0160               STR      R1,[R0, #+0]
   \   0000021E   5CE7               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_18:
   \   00000220   7F48               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   00000222   0068               LDR      R0,[R0, #+0]
   \   00000224   8021               MOVS     R1,#+128
   \   00000226   0902               LSLS     R1,R1,#+8        ;; #+32768
   \   00000228   0143               ORRS     R1,R1,R0
   \   0000022A   7D48               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   0000022C   0160               STR      R1,[R0, #+0]
   \   0000022E   7C48               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   00000230   0068               LDR      R0,[R0, #+0]
   \   00000232   8021               MOVS     R1,#+128
   \   00000234   C901               LSLS     R1,R1,#+7        ;; #+16384
   \   00000236   0143               ORRS     R1,R1,R0
   \   00000238   7948               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   0000023A   0160               STR      R1,[R0, #+0]
   \   0000023C   9248               LDR      R0,??DrvGPIO_InitFunction_36  ;; 0x50000050
   \   0000023E   0068               LDR      R0,[R0, #+0]
   \   00000240   0821               MOVS     R1,#+8
   \   00000242   8843               BICS     R0,R0,R1
   \   00000244   9049               LDR      R1,??DrvGPIO_InitFunction_36  ;; 0x50000050
   \   00000246   0860               STR      R0,[R1, #+0]
   \   00000248   47E7               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_3:
   \   0000024A   7548               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   0000024C   0068               LDR      R0,[R0, #+0]
   \   0000024E   8021               MOVS     R1,#+128
   \   00000250   4901               LSLS     R1,R1,#+5        ;; #+4096
   \   00000252   0143               ORRS     R1,R1,R0
   \   00000254   7248               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   00000256   0160               STR      R1,[R0, #+0]
   \   00000258   7148               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   0000025A   0068               LDR      R0,[R0, #+0]
   \   0000025C   8021               MOVS     R1,#+128
   \   0000025E   8901               LSLS     R1,R1,#+6        ;; #+8192
   \   00000260   0143               ORRS     R1,R1,R0
   \   00000262   6F48               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   00000264   0160               STR      R1,[R0, #+0]
   \   00000266   38E7               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_19:
   \   00000268   6D48               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   0000026A   0068               LDR      R0,[R0, #+0]
   \   0000026C   8021               MOVS     R1,#+128
   \   0000026E   4900               LSLS     R1,R1,#+1        ;; #+256
   \   00000270   0143               ORRS     R1,R1,R0
   \   00000272   6B48               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   00000274   0160               STR      R1,[R0, #+0]
   \   00000276   30E7               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_20:
   \   00000278   6948               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   0000027A   0068               LDR      R0,[R0, #+0]
   \   0000027C   8021               MOVS     R1,#+128
   \   0000027E   8900               LSLS     R1,R1,#+2        ;; #+512
   \   00000280   0143               ORRS     R1,R1,R0
   \   00000282   6748               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   00000284   0160               STR      R1,[R0, #+0]
   \   00000286   8048               LDR      R0,??DrvGPIO_InitFunction_36  ;; 0x50000050
   \   00000288   0068               LDR      R0,[R0, #+0]
   \   0000028A   1021               MOVS     R1,#+16
   \   0000028C   8843               BICS     R0,R0,R1
   \   0000028E   7E49               LDR      R1,??DrvGPIO_InitFunction_36  ;; 0x50000050
   \   00000290   0860               STR      R0,[R1, #+0]
   \   00000292   22E7               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_21:
   \   00000294   6248               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   00000296   0068               LDR      R0,[R0, #+0]
   \   00000298   8021               MOVS     R1,#+128
   \   0000029A   C900               LSLS     R1,R1,#+3        ;; #+1024
   \   0000029C   0143               ORRS     R1,R1,R0
   \   0000029E   6048               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   000002A0   0160               STR      R1,[R0, #+0]
   \   000002A2   7948               LDR      R0,??DrvGPIO_InitFunction_36  ;; 0x50000050
   \   000002A4   0068               LDR      R0,[R0, #+0]
   \   000002A6   0121               MOVS     R1,#+1
   \   000002A8   8843               BICS     R0,R0,R1
   \   000002AA   7749               LDR      R1,??DrvGPIO_InitFunction_36  ;; 0x50000050
   \   000002AC   0860               STR      R0,[R1, #+0]
   \   000002AE   14E7               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_22:
   \   000002B0   5B48               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   000002B2   0068               LDR      R0,[R0, #+0]
   \   000002B4   8021               MOVS     R1,#+128
   \   000002B6   0901               LSLS     R1,R1,#+4        ;; #+2048
   \   000002B8   0143               ORRS     R1,R1,R0
   \   000002BA   5948               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   000002BC   0160               STR      R1,[R0, #+0]
   \   000002BE   7248               LDR      R0,??DrvGPIO_InitFunction_36  ;; 0x50000050
   \   000002C0   0068               LDR      R0,[R0, #+0]
   \   000002C2   1021               MOVS     R1,#+16
   \   000002C4   8843               BICS     R0,R0,R1
   \   000002C6   7049               LDR      R1,??DrvGPIO_InitFunction_36  ;; 0x50000050
   \   000002C8   0860               STR      R0,[R1, #+0]
   \   000002CA   06E7               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_23:
   \   000002CC   5448               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   000002CE   0068               LDR      R0,[R0, #+0]
   \   000002D0   0121               MOVS     R1,#+1
   \   000002D2   0143               ORRS     R1,R1,R0
   \   000002D4   5248               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   000002D6   0160               STR      R1,[R0, #+0]
   \   000002D8   5148               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   000002DA   0068               LDR      R0,[R0, #+0]
   \   000002DC   0221               MOVS     R1,#+2
   \   000002DE   0143               ORRS     R1,R1,R0
   \   000002E0   4F48               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   000002E2   0160               STR      R1,[R0, #+0]
   \   000002E4   4E48               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   000002E6   0068               LDR      R0,[R0, #+0]
   \   000002E8   0421               MOVS     R1,#+4
   \   000002EA   0143               ORRS     R1,R1,R0
   \   000002EC   4C48               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   000002EE   0160               STR      R1,[R0, #+0]
   \   000002F0   4B48               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   000002F2   0068               LDR      R0,[R0, #+0]
   \   000002F4   0821               MOVS     R1,#+8
   \   000002F6   0143               ORRS     R1,R1,R0
   \   000002F8   4948               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   000002FA   0160               STR      R1,[R0, #+0]
   \   000002FC   EDE6               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_24:
   \   000002FE   4848               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   00000300   0068               LDR      R0,[R0, #+0]
   \   00000302   1021               MOVS     R1,#+16
   \   00000304   0143               ORRS     R1,R1,R0
   \   00000306   4648               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   00000308   0160               STR      R1,[R0, #+0]
   \   0000030A   4548               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   0000030C   0068               LDR      R0,[R0, #+0]
   \   0000030E   2021               MOVS     R1,#+32
   \   00000310   0143               ORRS     R1,R1,R0
   \   00000312   4348               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   00000314   0160               STR      R1,[R0, #+0]
   \   00000316   4248               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   00000318   0068               LDR      R0,[R0, #+0]
   \   0000031A   4021               MOVS     R1,#+64
   \   0000031C   0143               ORRS     R1,R1,R0
   \   0000031E   4048               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   00000320   0160               STR      R1,[R0, #+0]
   \   00000322   3F48               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   00000324   0068               LDR      R0,[R0, #+0]
   \   00000326   8021               MOVS     R1,#+128
   \   00000328   0143               ORRS     R1,R1,R0
   \   0000032A   3D48               LDR      R0,??DrvGPIO_InitFunction_33+0x4  ;; 0x50000034
   \   0000032C   0160               STR      R1,[R0, #+0]
   \   0000032E   D4E6               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_25:
   \   00000330   3D48               LDR      R0,??DrvGPIO_InitFunction_33+0xC  ;; 0x5000003c
   \   00000332   0068               LDR      R0,[R0, #+0]
   \   00000334   8021               MOVS     R1,#+128
   \   00000336   C901               LSLS     R1,R1,#+7        ;; #+16384
   \   00000338   0143               ORRS     R1,R1,R0
   \   0000033A   3B48               LDR      R0,??DrvGPIO_InitFunction_33+0xC  ;; 0x5000003c
   \   0000033C   0160               STR      R1,[R0, #+0]
   \   0000033E   3A48               LDR      R0,??DrvGPIO_InitFunction_33+0xC  ;; 0x5000003c
   \   00000340   0068               LDR      R0,[R0, #+0]
   \   00000342   8021               MOVS     R1,#+128
   \   00000344   0902               LSLS     R1,R1,#+8        ;; #+32768
   \   00000346   0143               ORRS     R1,R1,R0
   \   00000348   3748               LDR      R0,??DrvGPIO_InitFunction_33+0xC  ;; 0x5000003c
   \   0000034A   0160               STR      R1,[R0, #+0]
   \   0000034C   C5E6               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_4:
   \   0000034E   3548               LDR      R0,??DrvGPIO_InitFunction_33+0x8  ;; 0x50000038
   \   00000350   0068               LDR      R0,[R0, #+0]
   \   00000352   8021               MOVS     R1,#+128
   \   00000354   0143               ORRS     R1,R1,R0
   \   00000356   3348               LDR      R0,??DrvGPIO_InitFunction_33+0x8  ;; 0x50000038
   \   00000358   0160               STR      R1,[R0, #+0]
   \   0000035A   3248               LDR      R0,??DrvGPIO_InitFunction_33+0x8  ;; 0x50000038
   \   0000035C   0068               LDR      R0,[R0, #+0]
   \   0000035E   4021               MOVS     R1,#+64
   \   00000360   0143               ORRS     R1,R1,R0
   \   00000362   3048               LDR      R0,??DrvGPIO_InitFunction_33+0x8  ;; 0x50000038
   \   00000364   0160               STR      R1,[R0, #+0]
   \   00000366   B8E6               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_5:
   \   00000368   2E48               LDR      R0,??DrvGPIO_InitFunction_33+0x8  ;; 0x50000038
   \   0000036A   0068               LDR      R0,[R0, #+0]
   \   0000036C   8021               MOVS     R1,#+128
   \   0000036E   0902               LSLS     R1,R1,#+8        ;; #+32768
   \   00000370   0143               ORRS     R1,R1,R0
   \   00000372   2C48               LDR      R0,??DrvGPIO_InitFunction_33+0x8  ;; 0x50000038
   \   00000374   0160               STR      R1,[R0, #+0]
   \   00000376   2B48               LDR      R0,??DrvGPIO_InitFunction_33+0x8  ;; 0x50000038
   \   00000378   0068               LDR      R0,[R0, #+0]
   \   0000037A   8021               MOVS     R1,#+128
   \   0000037C   C901               LSLS     R1,R1,#+7        ;; #+16384
   \   0000037E   0143               ORRS     R1,R1,R0
   \   00000380   2848               LDR      R0,??DrvGPIO_InitFunction_33+0x8  ;; 0x50000038
   \   00000382   0160               STR      R1,[R0, #+0]
   \   00000384   A9E6               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_26:
   \   00000386   2848               LDR      R0,??DrvGPIO_InitFunction_33+0xC  ;; 0x5000003c
   \   00000388   0068               LDR      R0,[R0, #+0]
   \   0000038A   8021               MOVS     R1,#+128
   \   0000038C   0143               ORRS     R1,R1,R0
   \   0000038E   2648               LDR      R0,??DrvGPIO_InitFunction_33+0xC  ;; 0x5000003c
   \   00000390   0160               STR      R1,[R0, #+0]
   \   00000392   2548               LDR      R0,??DrvGPIO_InitFunction_33+0xC  ;; 0x5000003c
   \   00000394   0068               LDR      R0,[R0, #+0]
   \   00000396   4021               MOVS     R1,#+64
   \   00000398   0143               ORRS     R1,R1,R0
   \   0000039A   2348               LDR      R0,??DrvGPIO_InitFunction_33+0xC  ;; 0x5000003c
   \   0000039C   0160               STR      R1,[R0, #+0]
   \   0000039E   9CE6               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_6:
   \   000003A0   2048               LDR      R0,??DrvGPIO_InitFunction_33+0x8  ;; 0x50000038
   \   000003A2   0068               LDR      R0,[R0, #+0]
   \   000003A4   0121               MOVS     R1,#+1
   \   000003A6   0143               ORRS     R1,R1,R0
   \   000003A8   1E48               LDR      R0,??DrvGPIO_InitFunction_33+0x8  ;; 0x50000038
   \   000003AA   0160               STR      R1,[R0, #+0]
   \   000003AC   1D48               LDR      R0,??DrvGPIO_InitFunction_33+0x8  ;; 0x50000038
   \   000003AE   0068               LDR      R0,[R0, #+0]
   \   000003B0   0221               MOVS     R1,#+2
   \   000003B2   0143               ORRS     R1,R1,R0
   \   000003B4   1B48               LDR      R0,??DrvGPIO_InitFunction_33+0x8  ;; 0x50000038
   \   000003B6   0160               STR      R1,[R0, #+0]
   \   000003B8   1A48               LDR      R0,??DrvGPIO_InitFunction_33+0x8  ;; 0x50000038
   \   000003BA   0068               LDR      R0,[R0, #+0]
   \   000003BC   0421               MOVS     R1,#+4
   \   000003BE   0143               ORRS     R1,R1,R0
   \   000003C0   1848               LDR      R0,??DrvGPIO_InitFunction_33+0x8  ;; 0x50000038
   \   000003C2   0160               STR      R1,[R0, #+0]
   \   000003C4   1748               LDR      R0,??DrvGPIO_InitFunction_33+0x8  ;; 0x50000038
   \   000003C6   0068               LDR      R0,[R0, #+0]
   \   000003C8   0821               MOVS     R1,#+8
   \   000003CA   0143               ORRS     R1,R1,R0
   \   000003CC   1548               LDR      R0,??DrvGPIO_InitFunction_33+0x8  ;; 0x50000038
   \   000003CE   0160               STR      R1,[R0, #+0]
   \   000003D0   1448               LDR      R0,??DrvGPIO_InitFunction_33+0x8  ;; 0x50000038
   \   000003D2   0068               LDR      R0,[R0, #+0]
   \   000003D4   1021               MOVS     R1,#+16
   \   000003D6   0143               ORRS     R1,R1,R0
   \   000003D8   1248               LDR      R0,??DrvGPIO_InitFunction_33+0x8  ;; 0x50000038
   \   000003DA   0160               STR      R1,[R0, #+0]
   \   000003DC   1148               LDR      R0,??DrvGPIO_InitFunction_33+0x8  ;; 0x50000038
   \   000003DE   0068               LDR      R0,[R0, #+0]
   \   000003E0   2021               MOVS     R1,#+32
   \   000003E2   0143               ORRS     R1,R1,R0
   \   000003E4   0F48               LDR      R0,??DrvGPIO_InitFunction_33+0x8  ;; 0x50000038
   \   000003E6   0160               STR      R1,[R0, #+0]
   \   000003E8   2748               LDR      R0,??DrvGPIO_InitFunction_36  ;; 0x50000050
   \   000003EA   0068               LDR      R0,[R0, #+0]
   \   000003EC   2021               MOVS     R1,#+32
   \   000003EE   8843               BICS     R0,R0,R1
   \   000003F0   2549               LDR      R1,??DrvGPIO_InitFunction_36  ;; 0x50000050
   \   000003F2   0860               STR      R0,[R1, #+0]
   \   000003F4   2448               LDR      R0,??DrvGPIO_InitFunction_36  ;; 0x50000050
   \   000003F6   0068               LDR      R0,[R0, #+0]
   \   000003F8   4021               MOVS     R1,#+64
   \   000003FA   8843               BICS     R0,R0,R1
   \   000003FC   2249               LDR      R1,??DrvGPIO_InitFunction_36  ;; 0x50000050
   \   000003FE   0860               STR      R0,[R1, #+0]
   \   00000400   2148               LDR      R0,??DrvGPIO_InitFunction_36  ;; 0x50000050
   \   00000402   0068               LDR      R0,[R0, #+0]
   \   00000404   8021               MOVS     R1,#+128
   \   00000406   8843               BICS     R0,R0,R1
   \   00000408   1F49               LDR      R1,??DrvGPIO_InitFunction_36  ;; 0x50000050
   \   0000040A   0860               STR      R0,[R1, #+0]
   \   0000040C   1E48               LDR      R0,??DrvGPIO_InitFunction_36  ;; 0x50000050
   \   0000040E   0068               LDR      R0,[R0, #+0]
   \   00000410   ....               LDR      R1,??DataTable10  ;; 0xfffffeff
   \   00000412   0140               ANDS     R1,R1,R0
   \   00000414   1C48               LDR      R0,??DrvGPIO_InitFunction_36  ;; 0x50000050
   \   00000416   0160               STR      R1,[R0, #+0]
   \   00000418   5FE6               B        ??DrvGPIO_InitFunction_34
   \   0000041A   00BF               Nop      
   \                     ??DrvGPIO_InitFunction_33:
   \   0000041C   30000050           DC32     0x50000030
   \   00000420   34000050           DC32     0x50000034
   \   00000424   38000050           DC32     0x50000038
   \   00000428   3C000050           DC32     0x5000003c
   \   0000042C   40000050           DC32     0x50000040
   \                     ??DrvGPIO_InitFunction_7:
   \   00000430   ....               LDR      R0,??DataTable10_1  ;; 0x50000038
   \   00000432   0068               LDR      R0,[R0, #+0]
   \   00000434   8021               MOVS     R1,#+128
   \   00000436   4900               LSLS     R1,R1,#+1        ;; #+256
   \   00000438   0143               ORRS     R1,R1,R0
   \   0000043A   ....               LDR      R0,??DataTable10_1  ;; 0x50000038
   \   0000043C   0160               STR      R1,[R0, #+0]
   \   0000043E   ....               LDR      R0,??DataTable10_1  ;; 0x50000038
   \   00000440   0068               LDR      R0,[R0, #+0]
   \   00000442   8021               MOVS     R1,#+128
   \   00000444   8900               LSLS     R1,R1,#+2        ;; #+512
   \   00000446   0143               ORRS     R1,R1,R0
   \   00000448   ....               LDR      R0,??DataTable10_1  ;; 0x50000038
   \   0000044A   0160               STR      R1,[R0, #+0]
   \   0000044C   ....               LDR      R0,??DataTable10_1  ;; 0x50000038
   \   0000044E   0068               LDR      R0,[R0, #+0]
   \   00000450   8021               MOVS     R1,#+128
   \   00000452   C900               LSLS     R1,R1,#+3        ;; #+1024
   \   00000454   0143               ORRS     R1,R1,R0
   \   00000456   ....               LDR      R0,??DataTable10_1  ;; 0x50000038
   \   00000458   0160               STR      R1,[R0, #+0]
   \   0000045A   ....               LDR      R0,??DataTable10_1  ;; 0x50000038
   \   0000045C   0068               LDR      R0,[R0, #+0]
   \   0000045E   8021               MOVS     R1,#+128
   \   00000460   0901               LSLS     R1,R1,#+4        ;; #+2048
   \   00000462   0143               ORRS     R1,R1,R0
   \   00000464   ....               LDR      R0,??DataTable10_1  ;; 0x50000038
   \   00000466   0160               STR      R1,[R0, #+0]
   \   00000468   ....               LDR      R0,??DataTable10_1  ;; 0x50000038
   \   0000046A   0068               LDR      R0,[R0, #+0]
   \   0000046C   8021               MOVS     R1,#+128
   \   0000046E   4901               LSLS     R1,R1,#+5        ;; #+4096
   \   00000470   0143               ORRS     R1,R1,R0
   \   00000472   ....               LDR      R0,??DataTable10_1  ;; 0x50000038
   \   00000474   0160               STR      R1,[R0, #+0]
   \   00000476   ....               LDR      R0,??DataTable10_1  ;; 0x50000038
   \   00000478   0068               LDR      R0,[R0, #+0]
   \   0000047A   8021               MOVS     R1,#+128
   \   0000047C   8901               LSLS     R1,R1,#+6        ;; #+8192
   \   0000047E   0143               ORRS     R1,R1,R0
   \   00000480   ....               LDR      R0,??DataTable10_1  ;; 0x50000038
   \   00000482   0160               STR      R1,[R0, #+0]
   \   00000484   29E6               B        ??DrvGPIO_InitFunction_34
   \   00000486   00BF               Nop      
   \                     ??DrvGPIO_InitFunction_36:
   \   00000488   50000050           DC32     0x50000050
   \   0000048C   FFFDFFFF           DC32     0xfffffdff
   \                     ??DrvGPIO_InitFunction_8:
   \   00000490   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   00000492   0068               LDR      R0,[R0, #+0]
   \   00000494   0121               MOVS     R1,#+1
   \   00000496   0143               ORRS     R1,R1,R0
   \   00000498   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   0000049A   0160               STR      R1,[R0, #+0]
   \   0000049C   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   0000049E   0068               LDR      R0,[R0, #+0]
   \   000004A0   0221               MOVS     R1,#+2
   \   000004A2   0143               ORRS     R1,R1,R0
   \   000004A4   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   000004A6   0160               STR      R1,[R0, #+0]
   \   000004A8   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   000004AA   0068               LDR      R0,[R0, #+0]
   \   000004AC   0421               MOVS     R1,#+4
   \   000004AE   0143               ORRS     R1,R1,R0
   \   000004B0   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   000004B2   0160               STR      R1,[R0, #+0]
   \   000004B4   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   000004B6   0068               LDR      R0,[R0, #+0]
   \   000004B8   0821               MOVS     R1,#+8
   \   000004BA   0143               ORRS     R1,R1,R0
   \   000004BC   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   000004BE   0160               STR      R1,[R0, #+0]
   \   000004C0   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   000004C2   0068               LDR      R0,[R0, #+0]
   \   000004C4   1021               MOVS     R1,#+16
   \   000004C6   0143               ORRS     R1,R1,R0
   \   000004C8   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   000004CA   0160               STR      R1,[R0, #+0]
   \   000004CC   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   000004CE   0068               LDR      R0,[R0, #+0]
   \   000004D0   2021               MOVS     R1,#+32
   \   000004D2   0143               ORRS     R1,R1,R0
   \   000004D4   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   000004D6   0160               STR      R1,[R0, #+0]
   \   000004D8   FFE5               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_9:
   \   000004DA   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   000004DC   0068               LDR      R0,[R0, #+0]
   \   000004DE   8021               MOVS     R1,#+128
   \   000004E0   4900               LSLS     R1,R1,#+1        ;; #+256
   \   000004E2   0143               ORRS     R1,R1,R0
   \   000004E4   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   000004E6   0160               STR      R1,[R0, #+0]
   \   000004E8   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   000004EA   0068               LDR      R0,[R0, #+0]
   \   000004EC   8021               MOVS     R1,#+128
   \   000004EE   8900               LSLS     R1,R1,#+2        ;; #+512
   \   000004F0   0143               ORRS     R1,R1,R0
   \   000004F2   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   000004F4   0160               STR      R1,[R0, #+0]
   \   000004F6   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   000004F8   0068               LDR      R0,[R0, #+0]
   \   000004FA   8021               MOVS     R1,#+128
   \   000004FC   C900               LSLS     R1,R1,#+3        ;; #+1024
   \   000004FE   0143               ORRS     R1,R1,R0
   \   00000500   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   00000502   0160               STR      R1,[R0, #+0]
   \   00000504   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   00000506   0068               LDR      R0,[R0, #+0]
   \   00000508   8021               MOVS     R1,#+128
   \   0000050A   0901               LSLS     R1,R1,#+4        ;; #+2048
   \   0000050C   0143               ORRS     R1,R1,R0
   \   0000050E   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   00000510   0160               STR      R1,[R0, #+0]
   \   00000512   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   00000514   0068               LDR      R0,[R0, #+0]
   \   00000516   8021               MOVS     R1,#+128
   \   00000518   4901               LSLS     R1,R1,#+5        ;; #+4096
   \   0000051A   0143               ORRS     R1,R1,R0
   \   0000051C   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   0000051E   0160               STR      R1,[R0, #+0]
   \   00000520   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   00000522   0068               LDR      R0,[R0, #+0]
   \   00000524   8021               MOVS     R1,#+128
   \   00000526   8901               LSLS     R1,R1,#+6        ;; #+8192
   \   00000528   0143               ORRS     R1,R1,R0
   \   0000052A   ....               LDR      R0,??DataTable12  ;; 0x5000003c
   \   0000052C   0160               STR      R1,[R0, #+0]
   \   0000052E   D4E5               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_31:
   \   00000530   ....               LDR      R0,??DataTable10_1  ;; 0x50000038
   \   00000532   0068               LDR      R0,[R0, #+0]
   \   00000534   0121               MOVS     R1,#+1
   \   00000536   0143               ORRS     R1,R1,R0
   \   00000538   ....               LDR      R0,??DataTable10_1  ;; 0x50000038
   \   0000053A   0160               STR      R1,[R0, #+0]
   \   0000053C   ....               LDR      R0,??DataTable10_1  ;; 0x50000038
   \   0000053E   0068               LDR      R0,[R0, #+0]
   \   00000540   0221               MOVS     R1,#+2
   \   00000542   0143               ORRS     R1,R1,R0
   \   00000544   ....               LDR      R0,??DataTable10_1  ;; 0x50000038
   \   00000546   0160               STR      R1,[R0, #+0]
   \   00000548   ....               LDR      R0,??DataTable10_1  ;; 0x50000038
   \   0000054A   0068               LDR      R0,[R0, #+0]
   \   0000054C   0421               MOVS     R1,#+4
   \   0000054E   0143               ORRS     R1,R1,R0
   \   00000550   ....               LDR      R0,??DataTable10_1  ;; 0x50000038
   \   00000552   0160               STR      R1,[R0, #+0]
   \   00000554   ....               LDR      R0,??DataTable10_1  ;; 0x50000038
   \   00000556   0068               LDR      R0,[R0, #+0]
   \   00000558   0821               MOVS     R1,#+8
   \   0000055A   0143               ORRS     R1,R1,R0
   \   0000055C   ....               LDR      R0,??DataTable10_1  ;; 0x50000038
   \   0000055E   0160               STR      R1,[R0, #+0]
   \   00000560   ....               LDR      R0,??DataTable13  ;; 0x50000030
   \   00000562   0068               LDR      R0,[R0, #+0]
   \   00000564   8021               MOVS     R1,#+128
   \   00000566   0902               LSLS     R1,R1,#+8        ;; #+32768
   \   00000568   0143               ORRS     R1,R1,R0
   \   0000056A   ....               LDR      R0,??DataTable13  ;; 0x50000030
   \   0000056C   0160               STR      R1,[R0, #+0]
   \   0000056E   ....               LDR      R0,??DataTable13_1  ;; 0x50000050
   \   00000570   0068               LDR      R0,[R0, #+0]
   \   00000572   2021               MOVS     R1,#+32
   \   00000574   0143               ORRS     R1,R1,R0
   \   00000576   ....               LDR      R0,??DataTable13_1  ;; 0x50000050
   \   00000578   0160               STR      R1,[R0, #+0]
   \   0000057A   ....               LDR      R0,??DataTable13_1  ;; 0x50000050
   \   0000057C   0068               LDR      R0,[R0, #+0]
   \   0000057E   4021               MOVS     R1,#+64
   \   00000580   0143               ORRS     R1,R1,R0
   \   00000582   ....               LDR      R0,??DataTable13_1  ;; 0x50000050
   \   00000584   0160               STR      R1,[R0, #+0]
   \   00000586   ....               LDR      R0,??DataTable13_1  ;; 0x50000050
   \   00000588   0068               LDR      R0,[R0, #+0]
   \   0000058A   8021               MOVS     R1,#+128
   \   0000058C   0143               ORRS     R1,R1,R0
   \   0000058E   ....               LDR      R0,??DataTable13_1  ;; 0x50000050
   \   00000590   0160               STR      R1,[R0, #+0]
   \   00000592   ....               LDR      R0,??DataTable13_1  ;; 0x50000050
   \   00000594   0068               LDR      R0,[R0, #+0]
   \   00000596   8021               MOVS     R1,#+128
   \   00000598   4900               LSLS     R1,R1,#+1        ;; #+256
   \   0000059A   0143               ORRS     R1,R1,R0
   \   0000059C   ....               LDR      R0,??DataTable13_1  ;; 0x50000050
   \   0000059E   0160               STR      R1,[R0, #+0]
   \   000005A0   ....               LDR      R0,??DataTable13_1  ;; 0x50000050
   \   000005A2   0068               LDR      R0,[R0, #+0]
   \   000005A4   8021               MOVS     R1,#+128
   \   000005A6   8900               LSLS     R1,R1,#+2        ;; #+512
   \   000005A8   0143               ORRS     R1,R1,R0
   \   000005AA   ....               LDR      R0,??DataTable13_1  ;; 0x50000050
   \   000005AC   0160               STR      R1,[R0, #+0]
   \   000005AE   94E5               B        ??DrvGPIO_InitFunction_34
   \                     ??DrvGPIO_InitFunction_32:
   \   000005B0   ....               LDR      R0,??DataTable14  ;; 0xffff8901
   \   000005B2   93E5               B        ??DrvGPIO_InitFunction_35
    439          }
    440          
    441          /*---------------------------------------------------------------------------------------------------------*/
    442          /*                                                                                                         */
    443          /* FUNCTION                                                                                                */
    444          /*      DrvGPIO_Close()		 		                                                                       */
    445          /*                                                                                                         */
    446          /* DESCRIPTION                                                                                             */
    447          /*      To close the opened IO and reset its configurations                                                */
    448          /*                                                                                                         */
    449          /* INPUTS                                                                                                  */
    450          /*      port                                                                                               */
    451          /*          Specified GPIO port. It could be GPA, GPB , GPC , GPD , GPE                                    */
    452          /*      i32Bit                                                                                             */
    453          /*          Specified bit of the IO port. It could be 0~15                                                 */
    454          /*                                                                                                         */
    455          /* OUTPUTS                                                                                                 */
    456          /*      None                            				                                                   */
    457          /*                                                                                                         */
    458          /* RETURN                                                                                                  */
    459          /*      E_SUCCESS   		                                                                               */
    460          /*      E_DRVGPIO_ARGUMENT  Wrong arguments                                                                */
    461          /*                                                                                                         */
    462          /*---------------------------------------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    463          int32_t DrvGPIO_Close(DRVGPIO_PORT port,int32_t i32Bit)
    464          {
   \                     DrvGPIO_Close:
   \   00000000   10B5               PUSH     {R4,LR}
    465              if((i32Bit < 0) || (i32Bit > 16))
   \   00000002   0A00               MOVS     R2,R1
   \   00000004   121E               SUBS     R2,R2,#+0
   \   00000006   112A               CMP      R2,#+17
   \   00000008   01D3               BCC      ??DrvGPIO_Close_0
    466              {
    467                  return E_DRVGPIO_ARGUMENT;
   \   0000000A   ....               LDR      R0,??DataTable14  ;; 0xffff8901
   \   0000000C   15E0               B        ??DrvGPIO_Close_1
    468              }
    469              
    470              outpw((uint32_t)&GPIOA->PMD + port * PORT_OFFSET, (inpw((uint32_t)&GPIOA->PMD + port * PORT_OFFSET) & (~(3 << (i32Bit*2)))));
   \                     ??DrvGPIO_Close_0:
   \   0000000E   C0B2               UXTB     R0,R0
   \   00000010   4022               MOVS     R2,#+64
   \   00000012   4243               MULS     R2,R0,R2
   \   00000014   ....               LDR      R3,??DataTable15  ;; 0x50004000
   \   00000016   D258               LDR      R2,[R2, R3]
   \   00000018   0323               MOVS     R3,#+3
   \   0000001A   0224               MOVS     R4,#+2
   \   0000001C   6143               MULS     R1,R4,R1
   \   0000001E   8B40               LSLS     R3,R3,R1
   \   00000020   9A43               BICS     R2,R2,R3
   \   00000022   C0B2               UXTB     R0,R0
   \   00000024   4021               MOVS     R1,#+64
   \   00000026   4843               MULS     R0,R1,R0
   \   00000028   ....               LDR      R1,??DataTable15  ;; 0x50004000
   \   0000002A   4250               STR      R2,[R0, R1]
    471          	
    472          	GPIO_DBNCECON->ICLK_ON = 0; 
   \   0000002C   ....               LDR      R0,??DataTable16  ;; 0x50004180
   \   0000002E   0068               LDR      R0,[R0, #+0]
   \   00000030   2021               MOVS     R1,#+32
   \   00000032   8843               BICS     R0,R0,R1
   \   00000034   ....               LDR      R1,??DataTable16  ;; 0x50004180
   \   00000036   0860               STR      R0,[R1, #+0]
    473          
    474              return E_SUCCESS;
   \   00000038   0020               MOVS     R0,#+0
   \                     ??DrvGPIO_Close_1:
   \   0000003A   10BD               POP      {R4,PC}          ;; return
    475          }	
    476          
    477          /*---------------------------------------------------------------------------------------------------------*/
    478          /* Function:     DrvGPIO_Open                                                                              */
    479          /*                                                                                                         */
    480          /* Parameter:        																					   */	
    481          /*	             port    	-[in] Specified GPIO port. It could be GPA, GPB , GPC , GPD , GPE              */
    482          /*	             i32Bit  	-[in] Specified bit of the IO port. It could be 0~15                           */
    483          /*	             mode    	-[in] Set the IO to be IO_INPUT , IO_OUTPUT ,IO_OPENDRAIN or IO_QUASI          */
    484          /* Returns:                                                                                                */
    485          /*               E_SUCCESS           Success                                                               */
    486          /*               E_DRVGPIO_ARGUMENT  Wrong arguments                                                       */
    487          /*               E_DRVGPIO_BUSY      The IO has been used                                                  */
    488          /* Description:                                                                                            */
    489          /*               To configure the specified GPIO to use it.                                                */
    490          /*---------------------------------------------------------------------------------------------------------*/
    491          

   \                                 In section .text, align 2, keep-with-next
    492          int32_t DrvGPIO_Open(DRVGPIO_PORT port,int32_t i32Bit,DRVGPIO_IO mode)
    493          {
   \                     DrvGPIO_Open:
   \   00000000   30B5               PUSH     {R4,R5,LR}
    494              if(port > 4)
   \   00000002   C0B2               UXTB     R0,R0
   \   00000004   0528               CMP      R0,#+5
   \   00000006   01D3               BCC      ??DrvGPIO_Open_0
    495              {
    496                  return E_DRVGPIO_ARGUMENT;
   \   00000008   ....               LDR      R0,??DataTable14  ;; 0xffff8901
   \   0000000A   18E0               B        ??DrvGPIO_Open_1
    497              }
    498              
    499              if((i32Bit < 0) || (i32Bit > 16))
   \                     ??DrvGPIO_Open_0:
   \   0000000C   0B00               MOVS     R3,R1
   \   0000000E   1B1E               SUBS     R3,R3,#+0
   \   00000010   112B               CMP      R3,#+17
   \   00000012   01D3               BCC      ??DrvGPIO_Open_2
    500              {
    501                  return E_DRVGPIO_ARGUMENT;
   \   00000014   ....               LDR      R0,??DataTable14  ;; 0xffff8901
   \   00000016   12E0               B        ??DrvGPIO_Open_1
    502              }
    503              
    504              
    505              if(mode == IO_INPUT)
   \                     ??DrvGPIO_Open_2:
   \   00000018   D2B2               UXTB     R2,R2
   \   0000001A   012A               CMP      R2,#+1
   \   0000001C   10D1               BNE      ??DrvGPIO_Open_3
    506              {
    507                  outpw((uint32_t)&GPIOA->PMD + port * PORT_OFFSET, (inpw((uint32_t)&GPIOA->PMD + port * PORT_OFFSET) & (~(3 << (i32Bit * 2)))));
   \   0000001E   C0B2               UXTB     R0,R0
   \   00000020   4022               MOVS     R2,#+64
   \   00000022   4243               MULS     R2,R0,R2
   \   00000024   ....               LDR      R3,??DataTable15  ;; 0x50004000
   \   00000026   D258               LDR      R2,[R2, R3]
   \   00000028   0323               MOVS     R3,#+3
   \   0000002A   0224               MOVS     R4,#+2
   \   0000002C   6143               MULS     R1,R4,R1
   \   0000002E   8B40               LSLS     R3,R3,R1
   \   00000030   9A43               BICS     R2,R2,R3
   \   00000032   C0B2               UXTB     R0,R0
   \   00000034   4021               MOVS     R1,#+64
   \   00000036   4843               MULS     R0,R1,R0
   \   00000038   ....               LDR      R1,??DataTable15  ;; 0x50004000
   \   0000003A   4250               STR      R2,[R0, R1]
    508              }
    509              else if(mode == IO_OUTPUT)
    510              {
    511          		outpw((uint32_t)&GPIOA->PMD + port * PORT_OFFSET, (inpw((uint32_t)&GPIOA->PMD + port * PORT_OFFSET) & (~(3 << (i32Bit * 2)))));
    512                  outpw((uint32_t)&GPIOA->PMD + port * PORT_OFFSET, inpw((uint32_t)&GPIOA->PMD + port * PORT_OFFSET) | (1 << (i32Bit * 2)));
    513              }
    514              else if(mode == IO_OPENDRAIN)
    515              {
    516          		outpw((uint32_t)&GPIOA->PMD + port * PORT_OFFSET, (inpw((uint32_t)&GPIOA->PMD + port * PORT_OFFSET) & (~(3 << (i32Bit * 2)))));
    517                  outpw((uint32_t)&GPIOA->PMD + port * PORT_OFFSET, inpw((uint32_t)&GPIOA->PMD + port * PORT_OFFSET) | (2 << (i32Bit * 2)));
    518              }
    519          	else if(mode == IO_QUASI)
    520              {
    521          		outpw((uint32_t)&GPIOA->PMD + port * PORT_OFFSET, (inpw((uint32_t)&GPIOA->PMD + port * PORT_OFFSET) & (~(3 << (i32Bit * 2)))));
    522                  outpw((uint32_t)&GPIOA->PMD + port * PORT_OFFSET, inpw((uint32_t)&GPIOA->PMD + port * PORT_OFFSET) | (3 << (i32Bit * 2)));
    523              }
    524          	else
    525              {
    526                  return E_DRVGPIO_ARGUMENT;
    527              }
    528                  
    529          	return E_SUCCESS;
   \                     ??DrvGPIO_Open_4:
   \   0000003C   0020               MOVS     R0,#+0
   \                     ??DrvGPIO_Open_1:
   \   0000003E   30BD               POP      {R4,R5,PC}       ;; return
   \                     ??DrvGPIO_Open_3:
   \   00000040   D2B2               UXTB     R2,R2
   \   00000042   002A               CMP      R2,#+0
   \   00000044   1FD1               BNE      ??DrvGPIO_Open_5
   \   00000046   C0B2               UXTB     R0,R0
   \   00000048   4022               MOVS     R2,#+64
   \   0000004A   4243               MULS     R2,R0,R2
   \   0000004C   ....               LDR      R3,??DataTable15  ;; 0x50004000
   \   0000004E   D258               LDR      R2,[R2, R3]
   \   00000050   0323               MOVS     R3,#+3
   \   00000052   0C00               MOVS     R4,R1
   \   00000054   0225               MOVS     R5,#+2
   \   00000056   6C43               MULS     R4,R5,R4
   \   00000058   A340               LSLS     R3,R3,R4
   \   0000005A   9A43               BICS     R2,R2,R3
   \   0000005C   C0B2               UXTB     R0,R0
   \   0000005E   4023               MOVS     R3,#+64
   \   00000060   4343               MULS     R3,R0,R3
   \   00000062   ....               LDR      R4,??DataTable15  ;; 0x50004000
   \   00000064   1A51               STR      R2,[R3, R4]
   \   00000066   C0B2               UXTB     R0,R0
   \   00000068   4022               MOVS     R2,#+64
   \   0000006A   4243               MULS     R2,R0,R2
   \   0000006C   ....               LDR      R3,??DataTable15  ;; 0x50004000
   \   0000006E   D258               LDR      R2,[R2, R3]
   \   00000070   0123               MOVS     R3,#+1
   \   00000072   0224               MOVS     R4,#+2
   \   00000074   6143               MULS     R1,R4,R1
   \   00000076   8B40               LSLS     R3,R3,R1
   \   00000078   1343               ORRS     R3,R3,R2
   \   0000007A   C0B2               UXTB     R0,R0
   \   0000007C   4021               MOVS     R1,#+64
   \   0000007E   4843               MULS     R0,R1,R0
   \   00000080   ....               LDR      R1,??DataTable15  ;; 0x50004000
   \   00000082   4350               STR      R3,[R0, R1]
   \   00000084   DAE7               B        ??DrvGPIO_Open_4
   \                     ??DrvGPIO_Open_5:
   \   00000086   D2B2               UXTB     R2,R2
   \   00000088   022A               CMP      R2,#+2
   \   0000008A   1FD1               BNE      ??DrvGPIO_Open_6
   \   0000008C   C0B2               UXTB     R0,R0
   \   0000008E   4022               MOVS     R2,#+64
   \   00000090   4243               MULS     R2,R0,R2
   \   00000092   ....               LDR      R3,??DataTable15  ;; 0x50004000
   \   00000094   D258               LDR      R2,[R2, R3]
   \   00000096   0323               MOVS     R3,#+3
   \   00000098   0C00               MOVS     R4,R1
   \   0000009A   0225               MOVS     R5,#+2
   \   0000009C   6C43               MULS     R4,R5,R4
   \   0000009E   A340               LSLS     R3,R3,R4
   \   000000A0   9A43               BICS     R2,R2,R3
   \   000000A2   C0B2               UXTB     R0,R0
   \   000000A4   4023               MOVS     R3,#+64
   \   000000A6   4343               MULS     R3,R0,R3
   \   000000A8   ....               LDR      R4,??DataTable15  ;; 0x50004000
   \   000000AA   1A51               STR      R2,[R3, R4]
   \   000000AC   C0B2               UXTB     R0,R0
   \   000000AE   4022               MOVS     R2,#+64
   \   000000B0   4243               MULS     R2,R0,R2
   \   000000B2   ....               LDR      R3,??DataTable15  ;; 0x50004000
   \   000000B4   D258               LDR      R2,[R2, R3]
   \   000000B6   0223               MOVS     R3,#+2
   \   000000B8   0224               MOVS     R4,#+2
   \   000000BA   6143               MULS     R1,R4,R1
   \   000000BC   8B40               LSLS     R3,R3,R1
   \   000000BE   1343               ORRS     R3,R3,R2
   \   000000C0   C0B2               UXTB     R0,R0
   \   000000C2   4021               MOVS     R1,#+64
   \   000000C4   4843               MULS     R0,R1,R0
   \   000000C6   ....               LDR      R1,??DataTable15  ;; 0x50004000
   \   000000C8   4350               STR      R3,[R0, R1]
   \   000000CA   B7E7               B        ??DrvGPIO_Open_4
   \                     ??DrvGPIO_Open_6:
   \   000000CC   D2B2               UXTB     R2,R2
   \   000000CE   032A               CMP      R2,#+3
   \   000000D0   1FD1               BNE      ??DrvGPIO_Open_7
   \   000000D2   C0B2               UXTB     R0,R0
   \   000000D4   4022               MOVS     R2,#+64
   \   000000D6   4243               MULS     R2,R0,R2
   \   000000D8   ....               LDR      R3,??DataTable15  ;; 0x50004000
   \   000000DA   D258               LDR      R2,[R2, R3]
   \   000000DC   0323               MOVS     R3,#+3
   \   000000DE   0C00               MOVS     R4,R1
   \   000000E0   0225               MOVS     R5,#+2
   \   000000E2   6C43               MULS     R4,R5,R4
   \   000000E4   A340               LSLS     R3,R3,R4
   \   000000E6   9A43               BICS     R2,R2,R3
   \   000000E8   C0B2               UXTB     R0,R0
   \   000000EA   4023               MOVS     R3,#+64
   \   000000EC   4343               MULS     R3,R0,R3
   \   000000EE   ....               LDR      R4,??DataTable15  ;; 0x50004000
   \   000000F0   1A51               STR      R2,[R3, R4]
   \   000000F2   C0B2               UXTB     R0,R0
   \   000000F4   4022               MOVS     R2,#+64
   \   000000F6   4243               MULS     R2,R0,R2
   \   000000F8   ....               LDR      R3,??DataTable15  ;; 0x50004000
   \   000000FA   D258               LDR      R2,[R2, R3]
   \   000000FC   0323               MOVS     R3,#+3
   \   000000FE   0224               MOVS     R4,#+2
   \   00000100   6143               MULS     R1,R4,R1
   \   00000102   8B40               LSLS     R3,R3,R1
   \   00000104   1343               ORRS     R3,R3,R2
   \   00000106   C0B2               UXTB     R0,R0
   \   00000108   4021               MOVS     R1,#+64
   \   0000010A   4843               MULS     R0,R1,R0
   \   0000010C   ....               LDR      R1,??DataTable15  ;; 0x50004000
   \   0000010E   4350               STR      R3,[R0, R1]
   \   00000110   94E7               B        ??DrvGPIO_Open_4
   \                     ??DrvGPIO_Open_7:
   \   00000112   ....               LDR      R0,??DataTable14  ;; 0xffff8901
   \   00000114   93E7               B        ??DrvGPIO_Open_1
    530          }
    531          
    532          
    533          /*---------------------------------------------------------------------------------------------------------*/
    534          /* Function:     DrvGPIO_SetPortBits                                                                       */
    535          /*                                                                                                         */
    536          /* Parameter:        																					   */	
    537          /*	             port    	-[in] Specified GPIO port. It could be GPA, GPB , GPC , GPD , GPE              */
    538          /*	             i32Data  	-[in] The data to write to the specified IO port.                              */
    539          /* Returns:                                                                                                */
    540          /*               E_SUCCESS        			Success                                                        */
    541          /*               E_DRVGPIO_ARGUMENT        	Wrong arguments                                                */
    542          /* Description:                                                                                            */
    543          /*               The function is used to read flag to judge GPIO bit is used or not.                       */
    544          /*---------------------------------------------------------------------------------------------------------*/
    545          

   \                                 In section .text, align 2, keep-with-next
    546          int32_t DrvGPIO_SetPortBits(DRVGPIO_PORT port,int32_t i32Data)
    547          {
   \                     DrvGPIO_SetPortBits:
   \   00000000   00B5               PUSH     {LR}
    548              if(port > 4)
   \   00000002   C0B2               UXTB     R0,R0
   \   00000004   0528               CMP      R0,#+5
   \   00000006   01D3               BCC      ??DrvGPIO_SetPortBits_0
    549              {
    550                  return E_DRVGPIO_ARGUMENT;
   \   00000008   ....               LDR      R0,??DataTable14  ;; 0xffff8901
   \   0000000A   05E0               B        ??DrvGPIO_SetPortBits_1
    551              }
    552              
    553              if(port == GPA)
   \                     ??DrvGPIO_SetPortBits_0:
   \   0000000C   C0B2               UXTB     R0,R0
   \   0000000E   0028               CMP      R0,#+0
   \   00000010   03D1               BNE      ??DrvGPIO_SetPortBits_2
    554          		GPIOA->DOUT =	i32Data;
   \   00000012   ....               LDR      R0,??DataTable23  ;; 0x50004008
   \   00000014   0160               STR      R1,[R0, #+0]
    555          	else if(port == GPB)
    556          		GPIOB->DOUT |=	i32Data;
    557          	else if(port == GPC)
    558          		GPIOC->DOUT |=	i32Data;
    559          	else if(port == GPD)
    560          		GPIOD->DOUT |=	i32Data;
    561          	else if(port == GPE)
    562          		GPIOE->DOUT |=	i32Data;
    563          	else
    564          		return E_DRVGPIO_ARGUMENT;	
    565          
    566              return E_SUCCESS;
   \                     ??DrvGPIO_SetPortBits_3:
   \   00000016   0020               MOVS     R0,#+0
   \                     ??DrvGPIO_SetPortBits_1:
   \   00000018   00BD               POP      {PC}             ;; return
   \                     ??DrvGPIO_SetPortBits_2:
   \   0000001A   C0B2               UXTB     R0,R0
   \   0000001C   0128               CMP      R0,#+1
   \   0000001E   05D1               BNE      ??DrvGPIO_SetPortBits_4
   \   00000020   ....               LDR      R0,??DataTable24  ;; 0x50004048
   \   00000022   0068               LDR      R0,[R0, #+0]
   \   00000024   0143               ORRS     R1,R1,R0
   \   00000026   ....               LDR      R0,??DataTable24  ;; 0x50004048
   \   00000028   0160               STR      R1,[R0, #+0]
   \   0000002A   F4E7               B        ??DrvGPIO_SetPortBits_3
   \                     ??DrvGPIO_SetPortBits_4:
   \   0000002C   C0B2               UXTB     R0,R0
   \   0000002E   0228               CMP      R0,#+2
   \   00000030   05D1               BNE      ??DrvGPIO_SetPortBits_5
   \   00000032   ....               LDR      R0,??DataTable25  ;; 0x50004088
   \   00000034   0068               LDR      R0,[R0, #+0]
   \   00000036   0143               ORRS     R1,R1,R0
   \   00000038   ....               LDR      R0,??DataTable25  ;; 0x50004088
   \   0000003A   0160               STR      R1,[R0, #+0]
   \   0000003C   EBE7               B        ??DrvGPIO_SetPortBits_3
   \                     ??DrvGPIO_SetPortBits_5:
   \   0000003E   C0B2               UXTB     R0,R0
   \   00000040   0328               CMP      R0,#+3
   \   00000042   05D1               BNE      ??DrvGPIO_SetPortBits_6
   \   00000044   ....               LDR      R0,??DataTable25_1  ;; 0x500040c8
   \   00000046   0068               LDR      R0,[R0, #+0]
   \   00000048   0143               ORRS     R1,R1,R0
   \   0000004A   ....               LDR      R0,??DataTable25_1  ;; 0x500040c8
   \   0000004C   0160               STR      R1,[R0, #+0]
   \   0000004E   E2E7               B        ??DrvGPIO_SetPortBits_3
   \                     ??DrvGPIO_SetPortBits_6:
   \   00000050   C0B2               UXTB     R0,R0
   \   00000052   0428               CMP      R0,#+4
   \   00000054   05D1               BNE      ??DrvGPIO_SetPortBits_7
   \   00000056   ....               LDR      R0,??DataTable25_2  ;; 0x50004108
   \   00000058   0068               LDR      R0,[R0, #+0]
   \   0000005A   0143               ORRS     R1,R1,R0
   \   0000005C   ....               LDR      R0,??DataTable25_2  ;; 0x50004108
   \   0000005E   0160               STR      R1,[R0, #+0]
   \   00000060   D9E7               B        ??DrvGPIO_SetPortBits_3
   \                     ??DrvGPIO_SetPortBits_7:
   \   00000062   ....               LDR      R0,??DataTable14  ;; 0xffff8901
   \   00000064   D8E7               B        ??DrvGPIO_SetPortBits_1
    567          }
    568          
    569          /*---------------------------------------------------------------------------------------------------------*/
    570          /* Function:     DrvGPIO_GetPortBits                                                                       */
    571          /*                                                                                                         */
    572          /* Parameter:        																					   */	
    573          /*	             port    	-[in] Specified GPIO port. It could be GPA, GPB , GPC , GPD , GPE              */
    574          /* Returns:                                                                                                */
    575          /*               The IO pin value of the specified IO port                                                 */
    576          /* Description:                                                                                            */
    577          /*               The function is used to Get the data of the specified IO port.                            */
    578          /*---------------------------------------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    579          int32_t DrvGPIO_GetPortBits(DRVGPIO_PORT port)
    580          {
   \                     DrvGPIO_GetPortBits:
   \   00000000   00B5               PUSH     {LR}
    581           
    582              uint32_t u32PortAddr;
    583              
    584              if(port > 4)
   \   00000002   C0B2               UXTB     R0,R0
   \   00000004   0528               CMP      R0,#+5
   \   00000006   01D3               BCC      ??DrvGPIO_GetPortBits_0
    585              {
    586                  return E_DRVGPIO_ARGUMENT;
   \   00000008   ....               LDR      R0,??DataTable14  ;; 0xffff8901
   \   0000000A   05E0               B        ??DrvGPIO_GetPortBits_1
    587              }
    588              
    589              u32PortAddr = (uint32_t)&GPIOA->PIN + port * PORT_OFFSET;
   \                     ??DrvGPIO_GetPortBits_0:
   \   0000000C   C0B2               UXTB     R0,R0
   \   0000000E   4021               MOVS     R1,#+64
   \   00000010   4843               MULS     R0,R1,R0
   \   00000012   ....               LDR      R1,??DataTable25_3  ;; 0x50004010
   \   00000014   4018               ADDS     R0,R0,R1
    590             	
    591              return inpw(u32PortAddr);
   \   00000016   0068               LDR      R0,[R0, #+0]
   \                     ??DrvGPIO_GetPortBits_1:
   \   00000018   00BD               POP      {PC}             ;; return
    592          }
    593          
    594          /*---------------------------------------------------------------------------------------------------------*/
    595          /* Function:     DrvGPIO_GetBit                                                                            */
    596          /*                                                                                                         */
    597          /* Parameter:        																					   */	
    598          /*	             port    	-[in] Specified GPIO port. It could be GPA, GPB , GPC , GPD , GPE              */
    599          /*	             i32Bit  	-[in] Specified bit of the IO port. It could be 0~15                           */
    600          /* Returns:                                                                                                */
    601          /*               The bit value of the specified IO bit                                                     */
    602          /* Description:                                                                                            */
    603          /*               The function is used to Get the value of the specified IO bit .                           */
    604          /*---------------------------------------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    605          int32_t DrvGPIO_GetBit(DRVGPIO_PORT port, int32_t i32Bit)
    606          {
   \                     DrvGPIO_GetBit:
   \   00000000   00B5               PUSH     {LR}
    607              uint32_t u32PortAddr;
    608              
    609              if(port > 4)
   \   00000002   C0B2               UXTB     R0,R0
   \   00000004   0528               CMP      R0,#+5
   \   00000006   01D3               BCC      ??DrvGPIO_GetBit_0
    610              {
    611                  return E_DRVGPIO_ARGUMENT;
   \   00000008   ....               LDR      R0,??DataTable14  ;; 0xffff8901
   \   0000000A   0FE0               B        ??DrvGPIO_GetBit_1
    612              }
    613              
    614              if((i32Bit < 0) || (i32Bit > 16))
   \                     ??DrvGPIO_GetBit_0:
   \   0000000C   0A00               MOVS     R2,R1
   \   0000000E   121E               SUBS     R2,R2,#+0
   \   00000010   112A               CMP      R2,#+17
   \   00000012   01D3               BCC      ??DrvGPIO_GetBit_2
    615              {
    616                  return 0;
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   09E0               B        ??DrvGPIO_GetBit_1
    617              }
    618          
    619              u32PortAddr = (uint32_t)&GPIOA->PIN + port * PORT_OFFSET;
   \                     ??DrvGPIO_GetBit_2:
   \   00000018   C0B2               UXTB     R0,R0
   \   0000001A   4022               MOVS     R2,#+64
   \   0000001C   5043               MULS     R0,R2,R0
   \   0000001E   ....               LDR      R2,??DataTable25_3  ;; 0x50004010
   \   00000020   8018               ADDS     R0,R0,R2
    620             	   
    621          
    622              return ((inpw(u32PortAddr) >> i32Bit) & 1);
   \   00000022   0268               LDR      R2,[R0, #+0]
   \   00000024   CA40               LSRS     R2,R2,R1
   \   00000026   1000               MOVS     R0,R2
   \   00000028   C007               LSLS     R0,R0,#+31       ;; ZeroExtS R0,R0,#+31,#+31
   \   0000002A   C00F               LSRS     R0,R0,#+31
   \                     ??DrvGPIO_GetBit_1:
   \   0000002C   00BD               POP      {PC}             ;; return
    623          }
    624          
    625          
    626          /*---------------------------------------------------------------------------------------------------------*/
    627          /* Function:     DrvGPIO_SetBit                                                                            */
    628          /*                                                                                                         */
    629          /* Parameter:        																					   */	
    630          /*	             port    	-[in] Specified GPIO port. It could be GPA, GPB , GPC , GPD , GPE              */
    631          /*	             i32Bit  	-[in] Specified bit of the IO port. It could be 0~15                           */
    632          /* Returns:                                                                                                */
    633          /*               E_SUCCESS           Success                                                               */
    634          /*               E_DRVGPIO_ARGUMENT  Wrong arguments                                                       */
    635          /* Description:                                                                                            */
    636          /*               The function is used to Set the specified IO bit to 1  .                                  */
    637          /*---------------------------------------------------------------------------------------------------------*/
    638          

   \                                 In section .text, align 2, keep-with-next
    639          int32_t DrvGPIO_SetBit(DRVGPIO_PORT port,int32_t i32Bit)
    640          {
   \                     DrvGPIO_SetBit:
   \   00000000   00B5               PUSH     {LR}
    641            if(port > 4)
   \   00000002   C0B2               UXTB     R0,R0
   \   00000004   0528               CMP      R0,#+5
   \   00000006   01D3               BCC      ??DrvGPIO_SetBit_0
    642              {
    643                  return E_DRVGPIO_ARGUMENT;
   \   00000008   ....               LDR      R0,??DataTable14  ;; 0xffff8901
   \   0000000A   10E0               B        ??DrvGPIO_SetBit_1
    644              }
    645          
    646              if((i32Bit < 0) || (i32Bit > 16))
   \                     ??DrvGPIO_SetBit_0:
   \   0000000C   0A00               MOVS     R2,R1
   \   0000000E   121E               SUBS     R2,R2,#+0
   \   00000010   112A               CMP      R2,#+17
   \   00000012   01D3               BCC      ??DrvGPIO_SetBit_2
    647              {
    648                  return E_DRVGPIO_ARGUMENT;
   \   00000014   ....               LDR      R0,??DataTable14  ;; 0xffff8901
   \   00000016   0AE0               B        ??DrvGPIO_SetBit_1
    649              }
    650          
    651              if(port == GPA)
   \                     ??DrvGPIO_SetBit_2:
   \   00000018   C0B2               UXTB     R0,R0
   \   0000001A   0028               CMP      R0,#+0
   \   0000001C   08D1               BNE      ??DrvGPIO_SetBit_3
    652          		GPIOA->DOUT |=	1 << i32Bit;
   \   0000001E   ....               LDR      R0,??DataTable23  ;; 0x50004008
   \   00000020   0068               LDR      R0,[R0, #+0]
   \   00000022   0122               MOVS     R2,#+1
   \   00000024   8A40               LSLS     R2,R2,R1
   \   00000026   0243               ORRS     R2,R2,R0
   \   00000028   ....               LDR      R0,??DataTable23  ;; 0x50004008
   \   0000002A   0260               STR      R2,[R0, #+0]
    653          	else if(port == GPB)
    654          		GPIOB->DOUT |=	1 << i32Bit;
    655          	else if(port == GPC)
    656          		GPIOC->DOUT |=	1 << i32Bit;
    657          	else if(port == GPD)
    658          		GPIOD->DOUT |=	1 << i32Bit;
    659          	else if(port == GPE)
    660          		GPIOE->DOUT |=	1 << i32Bit;
    661          	else
    662          		return E_DRVGPIO_ARGUMENT;	
    663          
    664          	return E_SUCCESS;
   \                     ??DrvGPIO_SetBit_4:
   \   0000002C   0020               MOVS     R0,#+0
   \                     ??DrvGPIO_SetBit_1:
   \   0000002E   00BD               POP      {PC}             ;; return
   \                     ??DrvGPIO_SetBit_3:
   \   00000030   C0B2               UXTB     R0,R0
   \   00000032   0128               CMP      R0,#+1
   \   00000034   07D1               BNE      ??DrvGPIO_SetBit_5
   \   00000036   ....               LDR      R0,??DataTable24  ;; 0x50004048
   \   00000038   0068               LDR      R0,[R0, #+0]
   \   0000003A   0122               MOVS     R2,#+1
   \   0000003C   8A40               LSLS     R2,R2,R1
   \   0000003E   0243               ORRS     R2,R2,R0
   \   00000040   ....               LDR      R0,??DataTable24  ;; 0x50004048
   \   00000042   0260               STR      R2,[R0, #+0]
   \   00000044   F2E7               B        ??DrvGPIO_SetBit_4
   \                     ??DrvGPIO_SetBit_5:
   \   00000046   C0B2               UXTB     R0,R0
   \   00000048   0228               CMP      R0,#+2
   \   0000004A   07D1               BNE      ??DrvGPIO_SetBit_6
   \   0000004C   ....               LDR      R0,??DataTable25  ;; 0x50004088
   \   0000004E   0068               LDR      R0,[R0, #+0]
   \   00000050   0122               MOVS     R2,#+1
   \   00000052   8A40               LSLS     R2,R2,R1
   \   00000054   0243               ORRS     R2,R2,R0
   \   00000056   ....               LDR      R0,??DataTable25  ;; 0x50004088
   \   00000058   0260               STR      R2,[R0, #+0]
   \   0000005A   E7E7               B        ??DrvGPIO_SetBit_4
   \                     ??DrvGPIO_SetBit_6:
   \   0000005C   C0B2               UXTB     R0,R0
   \   0000005E   0328               CMP      R0,#+3
   \   00000060   07D1               BNE      ??DrvGPIO_SetBit_7
   \   00000062   ....               LDR      R0,??DataTable25_1  ;; 0x500040c8
   \   00000064   0068               LDR      R0,[R0, #+0]
   \   00000066   0122               MOVS     R2,#+1
   \   00000068   8A40               LSLS     R2,R2,R1
   \   0000006A   0243               ORRS     R2,R2,R0
   \   0000006C   ....               LDR      R0,??DataTable25_1  ;; 0x500040c8
   \   0000006E   0260               STR      R2,[R0, #+0]
   \   00000070   DCE7               B        ??DrvGPIO_SetBit_4
   \                     ??DrvGPIO_SetBit_7:
   \   00000072   C0B2               UXTB     R0,R0
   \   00000074   0428               CMP      R0,#+4
   \   00000076   07D1               BNE      ??DrvGPIO_SetBit_8
   \   00000078   ....               LDR      R0,??DataTable25_2  ;; 0x50004108
   \   0000007A   0068               LDR      R0,[R0, #+0]
   \   0000007C   0122               MOVS     R2,#+1
   \   0000007E   8A40               LSLS     R2,R2,R1
   \   00000080   0243               ORRS     R2,R2,R0
   \   00000082   ....               LDR      R0,??DataTable25_2  ;; 0x50004108
   \   00000084   0260               STR      R2,[R0, #+0]
   \   00000086   D1E7               B        ??DrvGPIO_SetBit_4
   \                     ??DrvGPIO_SetBit_8:
   \   00000088   ....               LDR      R0,??DataTable14  ;; 0xffff8901
   \   0000008A   D0E7               B        ??DrvGPIO_SetBit_1
    665          
    666          }
    667          
    668          
    669          /*---------------------------------------------------------------------------------------------------------*/
    670          /* Function:     DrvGPIO_ClrBit                                                                            */
    671          /*                                                                                                         */
    672          /* Parameter:        																					   */	
    673          /*	             port    	-[in] Specified GPIO port. It could be GPA, GPB , GPC , GPD , GPE              */
    674          /*	             i32Bit  	-[in] Specified bit of the IO port. It could be 0~15                           */
    675          /* Returns:                                                                                                */
    676          /*               E_SUCCESS           Success                                                               */
    677          /*               E_DRVGPIO_ARGUMENT  Wrong arguments                                                       */
    678          /* Description:                                                                                            */
    679          /*               The function is used to  Clear the specified IO bit to 0                                  */
    680          /*---------------------------------------------------------------------------------------------------------*/
    681          

   \                                 In section .text, align 2, keep-with-next
    682          int32_t DrvGPIO_ClrBit(DRVGPIO_PORT port,int32_t i32Bit)
    683          {
   \                     DrvGPIO_ClrBit:
   \   00000000   00B5               PUSH     {LR}
    684              uint32_t u32PortAddr;
    685              
    686              if(port > 4)
   \   00000002   C0B2               UXTB     R0,R0
   \   00000004   0528               CMP      R0,#+5
   \   00000006   01D3               BCC      ??DrvGPIO_ClrBit_0
    687              {
    688                  return E_DRVGPIO_ARGUMENT;
   \   00000008   ....               LDR      R0,??DataTable27  ;; 0xffff8901
   \   0000000A   10E0               B        ??DrvGPIO_ClrBit_1
    689              }
    690              
    691              if((i32Bit < 0) || (i32Bit > 16))
   \                     ??DrvGPIO_ClrBit_0:
   \   0000000C   0A00               MOVS     R2,R1
   \   0000000E   121E               SUBS     R2,R2,#+0
   \   00000010   112A               CMP      R2,#+17
   \   00000012   01D3               BCC      ??DrvGPIO_ClrBit_2
    692              {
    693                  return E_DRVGPIO_ARGUMENT;
   \   00000014   ....               LDR      R0,??DataTable27  ;; 0xffff8901
   \   00000016   0AE0               B        ??DrvGPIO_ClrBit_1
    694              }
    695          
    696          	u32PortAddr = (uint32_t)&GPIOA->DOUT  + port * PORT_OFFSET;
   \                     ??DrvGPIO_ClrBit_2:
   \   00000018   C0B2               UXTB     R0,R0
   \   0000001A   4022               MOVS     R2,#+64
   \   0000001C   5043               MULS     R0,R2,R0
   \   0000001E   ....               LDR      R2,??DataTable23  ;; 0x50004008
   \   00000020   8018               ADDS     R0,R0,R2
    697             	
    698          	outpw(u32PortAddr, inpw(u32PortAddr) & (~(1 << i32Bit)));
   \   00000022   0268               LDR      R2,[R0, #+0]
   \   00000024   0123               MOVS     R3,#+1
   \   00000026   8B40               LSLS     R3,R3,R1
   \   00000028   9A43               BICS     R2,R2,R3
   \   0000002A   0260               STR      R2,[R0, #+0]
    699             
    700              return E_SUCCESS;
   \   0000002C   0020               MOVS     R0,#+0
   \                     ??DrvGPIO_ClrBit_1:
   \   0000002E   00BD               POP      {PC}             ;; return
    701          }
    702          
    703          
    704          /*---------------------------------------------------------------------------------------------------------*/
    705          /* Function:     DrvGPIO_GetDoutBit                                                                        */
    706          /*                                                                                                         */
    707          /* Parameter:        																					   */	
    708          /*	             port    	-[in] Specified GPIO port. It could be GPA, GPB , GPC , GPD , GPE              */
    709          /*	             i32Bit  	-[in] Specified bit of the IO port. It could be 0~15                           */
    710          /* Returns:                                                                                                */
    711          /*               The bit value of the specified IO bit                                                     */
    712          /* Description:                                                                                            */
    713          /*               The function is used to Get the value of the specified IO bit from GPIO Dout register.    */
    714          /*---------------------------------------------------------------------------------------------------------*/
    715          

   \                                 In section .text, align 2, keep-with-next
    716          int32_t DrvGPIO_GetDoutBit(DRVGPIO_PORT port, int32_t i32Bit)
    717          {
   \                     DrvGPIO_GetDoutBit:
   \   00000000   00B5               PUSH     {LR}
    718          	if(port > 4)
   \   00000002   C0B2               UXTB     R0,R0
   \   00000004   0528               CMP      R0,#+5
   \   00000006   01D3               BCC      ??DrvGPIO_GetDoutBit_0
    719              {
    720                  return E_DRVGPIO_ARGUMENT;
   \   00000008   ....               LDR      R0,??DataTable27  ;; 0xffff8901
   \   0000000A   0EE0               B        ??DrvGPIO_GetDoutBit_1
    721              }
    722              
    723              if((i32Bit < 0) || (i32Bit >= 15))
   \                     ??DrvGPIO_GetDoutBit_0:
   \   0000000C   0A00               MOVS     R2,R1
   \   0000000E   121E               SUBS     R2,R2,#+0
   \   00000010   0F2A               CMP      R2,#+15
   \   00000012   01D3               BCC      ??DrvGPIO_GetDoutBit_2
    724              {
    725                  return E_DRVGPIO_ARGUMENT;
   \   00000014   ....               LDR      R0,??DataTable27  ;; 0xffff8901
   \   00000016   08E0               B        ??DrvGPIO_GetDoutBit_1
    726              }
    727           
    728              return ((inpw((uint32_t)&GPIOA->DOUT + port * PORT_OFFSET) >> i32Bit) & 1);
   \                     ??DrvGPIO_GetDoutBit_2:
   \   00000018   C0B2               UXTB     R0,R0
   \   0000001A   4022               MOVS     R2,#+64
   \   0000001C   5043               MULS     R0,R2,R0
   \   0000001E   ....               LDR      R2,??DataTable23  ;; 0x50004008
   \   00000020   8258               LDR      R2,[R0, R2]
   \   00000022   CA40               LSRS     R2,R2,R1
   \   00000024   1000               MOVS     R0,R2
   \   00000026   C007               LSLS     R0,R0,#+31       ;; ZeroExtS R0,R0,#+31,#+31
   \   00000028   C00F               LSRS     R0,R0,#+31
   \                     ??DrvGPIO_GetDoutBit_1:
   \   0000002A   00BD               POP      {PC}             ;; return
    729          }
    730          
    731          
    732          /*---------------------------------------------------------------------------------------------------------*/
    733          /* Function:     DrvGPIO_GetPortDoutBits                                                                   */
    734          /*                                                                                                         */
    735          /* Parameter:        																					   */	
    736          /*	             port    	-[in] Specified GPIO port. It could be GPA, GPB , GPC , GPD , GPE              */
    737          /* Returns:                                                                                                */
    738          /*               The value of the GPIO DOUT register value.                                                */
    739          /* Description:                                                                                            */
    740          /*               The function is used to Get the Dout register value of the specified IO port.    		   */
    741          /*---------------------------------------------------------------------------------------------------------*/
    742          

   \                                 In section .text, align 2, keep-with-next
    743          int32_t DrvGPIO_GetPortDoutBits(DRVGPIO_PORT port)
    744          {
   \                     DrvGPIO_GetPortDoutBits:
   \   00000000   00B5               PUSH     {LR}
    745              if(port > 4)
   \   00000002   C0B2               UXTB     R0,R0
   \   00000004   0528               CMP      R0,#+5
   \   00000006   01D3               BCC      ??DrvGPIO_GetPortDoutBits_0
    746              {
    747                  return E_DRVGPIO_ARGUMENT;
   \   00000008   ....               LDR      R0,??DataTable27  ;; 0xffff8901
   \   0000000A   04E0               B        ??DrvGPIO_GetPortDoutBits_1
    748              }
    749          
    750              return inpw((uint32_t)&GPIOA->DOUT + port *PORT_OFFSET);
   \                     ??DrvGPIO_GetPortDoutBits_0:
   \   0000000C   C0B2               UXTB     R0,R0
   \   0000000E   4021               MOVS     R1,#+64
   \   00000010   4843               MULS     R0,R1,R0
   \   00000012   ....               LDR      R1,??DataTable23  ;; 0x50004008
   \   00000014   4058               LDR      R0,[R0, R1]
   \                     ??DrvGPIO_GetPortDoutBits_1:
   \   00000016   00BD               POP      {PC}             ;; return
    751          }
    752          
    753          /*---------------------------------------------------------------------------------------------------------*/
    754          /* Function:     DrvGPIO_SetDebounceTime                                                                   */
    755          /*                                                                                                         */
    756          /* Parameter:        																					   */	
    757          /*	             i32DebounceClk    	-[in] The debounce timing is 2^(i32DebounceClk) * source clock         */
    758          /*	             i8ClockSource    	-[in] The debounce clock source can be DBCLKSRC_HCLK or DBCLKSRC_10K   */
    759          /* Returns:                                                                                                */
    760          /*               E_SUCCESS                                                                                 */
    761          /*               E_DRVGPIO_ARGUMENT  Wrong arguments                                                       */
    762          /* Description:                                                                                            */
    763          /*               The function is used to To set the debounce timing and select source.     		           */
    764          /*---------------------------------------------------------------------------------------------------------*/
    765          

   \                                 In section .text, align 2, keep-with-next
    766          int32_t DrvGPIO_SetDebounceTime(uint32_t u32DebounceClk,DRVGPIO_DBCLKSRC clockSource)
    767          {
   \                     DrvGPIO_SetDebounceTime:
   \   00000000   00B5               PUSH     {LR}
    768          
    769              /* Maximum debounce time is 2^(15 + 1) * clk src */
    770              if(u32DebounceClk > 15)
   \   00000002   1028               CMP      R0,#+16
   \   00000004   00D3               BCC      ??DrvGPIO_SetDebounceTime_0
    771              {
    772                  u32DebounceClk = 15;
   \   00000006   0F20               MOVS     R0,#+15
    773              }
    774              
    775          	GPIO_DBNCECON->DBCLKSEL = u32DebounceClk ; 
   \                     ??DrvGPIO_SetDebounceTime_0:
   \   00000008   ....               LDR      R2,??DataTable30  ;; 0x50004180
   \   0000000A   1268               LDR      R2,[R2, #+0]
   \   0000000C   0F23               MOVS     R3,#+15
   \   0000000E   9A43               BICS     R2,R2,R3
   \   00000010   0007               LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
   \   00000012   000F               LSRS     R0,R0,#+28
   \   00000014   1043               ORRS     R0,R0,R2
   \   00000016   ....               LDR      R2,??DataTable30  ;; 0x50004180
   \   00000018   1060               STR      R0,[R2, #+0]
    776          
    777          	GPIO_DBNCECON->DBCLKSRC = clockSource ; 
   \   0000001A   ....               LDR      R0,??DataTable30  ;; 0x50004180
   \   0000001C   0068               LDR      R0,[R0, #+0]
   \   0000001E   1022               MOVS     R2,#+16
   \   00000020   9043               BICS     R0,R0,R2
   \   00000022   C9B2               UXTB     R1,R1
   \   00000024   0901               LSLS     R1,R1,#+4
   \   00000026   1022               MOVS     R2,#+16
   \   00000028   0A40               ANDS     R2,R2,R1
   \   0000002A   0243               ORRS     R2,R2,R0
   \   0000002C   ....               LDR      R0,??DataTable30  ;; 0x50004180
   \   0000002E   0260               STR      R2,[R0, #+0]
    778          
    779              return E_SUCCESS;
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   00BD               POP      {PC}             ;; return
    780          }
    781          
    782          /*---------------------------------------------------------------------------------------------------------*/
    783          /* Function:     DrvGPIO_GetDebounceTime                                                                   */
    784          /*                                                                                                         */
    785          /* Parameter:        																					   */	
    786          /*               None                                                                                      */
    787          /* Returns:                                                                                                */
    788          /*               The debounce time setting.                                                                */
    789          /* Description:                                                                                            */
    790          /*               The function is used to To Get the debounce timing setting.            		           */
    791          /*---------------------------------------------------------------------------------------------------------*/
    792          

   \                                 In section .text, align 2, keep-with-next
    793          int32_t DrvGPIO_GetDebounceTime(void)
    794          {
   \                     DrvGPIO_GetDebounceTime:
   \   00000000   81B0               SUB      SP,SP,#+4
    795              volatile int32_t i32Reg;
    796          
    797              i32Reg = 	GPIO_DBNCECON->DBCLKSEL;
   \   00000002   ....               LDR      R0,??DataTable30  ;; 0x50004180
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   0007               LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
   \   00000008   000F               LSRS     R0,R0,#+28
   \   0000000A   0090               STR      R0,[SP, #+0]
    798             
    799              return i32Reg;
   \   0000000C   0098               LDR      R0,[SP, #+0]
   \   0000000E   01B0               ADD      SP,SP,#+4
   \   00000010   7047               BX       LR               ;; return
    800          }
    801          
    802          
    803          
    804          /*---------------------------------------------------------------------------------------------------------*/
    805          /* Function:     DrvGPIO_EnableDebounce                                                                    */
    806          /*                                                                                                         */
    807          /* Parameter:        																					   */	
    808          /*	             port    	-[in] Specified GPIO port. It could be GPA, GPB , GPC , GPD , GPE              */
    809          /*	             u32Bit  	-[in] Specified bit of the IO port. It could be 0~15                           */
    810          /* Returns:                                                                                                */
    811          /*               E_SUCCESS   		 Success .                                                             */
    812          /*               E_DRVGPIO_ARGUMENT  Wrong arguments .                                                     */
    813          /* Description:                                                                                            */
    814          /*               To enable the debounce function of the specified GPIO bit.            	     	           */
    815          /*---------------------------------------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    816          int32_t DrvGPIO_EnableDebounce(DRVGPIO_PORT port,uint32_t u32Bit)
    817          {
   \                     DrvGPIO_EnableDebounce:
   \   00000000   00B5               PUSH     {LR}
    818              if(u32Bit > 15)
   \   00000002   1029               CMP      R1,#+16
   \   00000004   01D3               BCC      ??DrvGPIO_EnableDebounce_0
    819                  return E_DRVGPIO_ARGUMENT;
   \   00000006   ....               LDR      R0,??DataTable27  ;; 0xffff8901
   \   00000008   0DE0               B        ??DrvGPIO_EnableDebounce_1
    820          
    821              outpw((uint32_t)&GPIOA->DBEN + port * PORT_OFFSET, inpw((uint32_t)&GPIOA->DBEN + port * PORT_OFFSET) | (1 << u32Bit));
   \                     ??DrvGPIO_EnableDebounce_0:
   \   0000000A   C0B2               UXTB     R0,R0
   \   0000000C   4022               MOVS     R2,#+64
   \   0000000E   4243               MULS     R2,R0,R2
   \   00000010   ....               LDR      R3,??DataTable31  ;; 0x50004014
   \   00000012   D258               LDR      R2,[R2, R3]
   \   00000014   0123               MOVS     R3,#+1
   \   00000016   8B40               LSLS     R3,R3,R1
   \   00000018   1343               ORRS     R3,R3,R2
   \   0000001A   C0B2               UXTB     R0,R0
   \   0000001C   4021               MOVS     R1,#+64
   \   0000001E   4843               MULS     R0,R1,R0
   \   00000020   ....               LDR      R1,??DataTable31  ;; 0x50004014
   \   00000022   4350               STR      R3,[R0, R1]
    822          
    823          	//GPIO_DBNCECON->ICLK_ON = 1;
    824          
    825              return E_SUCCESS;
   \   00000024   0020               MOVS     R0,#+0
   \                     ??DrvGPIO_EnableDebounce_1:
   \   00000026   00BD               POP      {PC}             ;; return
    826          }
    827          
    828          
    829          /*---------------------------------------------------------------------------------------------------------*/
    830          /* Function:     DrvGPIO_DisableDebounce                                                                   */
    831          /*                                                                                                         */
    832          /* Parameter:        																					   */	
    833          /*	             port    	-[in] Specified GPIO port. It could be GPA, GPB , GPC , GPD , GPE              */
    834          /*	             i32Bit  	-[in] Specified bit of the IO port. It could be 0~15                           */
    835          /* Returns:                                                                                                */
    836          /*               E_SUCCESS   		 Success .                                                             */
    837          /*               E_DRVGPIO_ARGUMENT  Wrong arguments .                                                     */
    838          /* Description:                                                                                            */
    839          /*               To disable the debounce function of the specified GPIO bit.            	     	       */
    840          /*---------------------------------------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    841          int32_t DrvGPIO_DisableDebounce(DRVGPIO_PORT port, uint32_t u32Bit)
    842          {
   \                     DrvGPIO_DisableDebounce:
   \   00000000   00B5               PUSH     {LR}
    843              if(port > GPE)
   \   00000002   C0B2               UXTB     R0,R0
   \   00000004   0528               CMP      R0,#+5
   \   00000006   01D3               BCC      ??DrvGPIO_DisableDebounce_0
    844                  return E_DRVGPIO_ARGUMENT;
   \   00000008   ....               LDR      R0,??DataTable27  ;; 0xffff8901
   \   0000000A   0DE0               B        ??DrvGPIO_DisableDebounce_1
    845          
    846              outpw((uint32_t)&GPIOA->DBEN + port * PORT_OFFSET , inpw((uint32_t)&GPIOA->DBEN + port * PORT_OFFSET) &(~(1<<u32Bit)));
   \                     ??DrvGPIO_DisableDebounce_0:
   \   0000000C   C0B2               UXTB     R0,R0
   \   0000000E   4022               MOVS     R2,#+64
   \   00000010   4243               MULS     R2,R0,R2
   \   00000012   ....               LDR      R3,??DataTable31  ;; 0x50004014
   \   00000014   D258               LDR      R2,[R2, R3]
   \   00000016   0123               MOVS     R3,#+1
   \   00000018   8B40               LSLS     R3,R3,R1
   \   0000001A   9A43               BICS     R2,R2,R3
   \   0000001C   C0B2               UXTB     R0,R0
   \   0000001E   4021               MOVS     R1,#+64
   \   00000020   4843               MULS     R0,R1,R0
   \   00000022   ....               LDR      R1,??DataTable31  ;; 0x50004014
   \   00000024   4250               STR      R2,[R0, R1]
    847          
    848              
    849          	return E_SUCCESS;
   \   00000026   0020               MOVS     R0,#+0
   \                     ??DrvGPIO_DisableDebounce_1:
   \   00000028   00BD               POP      {PC}             ;; return
    850          }
    851          
    852          
    853          /*---------------------------------------------------------------------------------------------------------*/
    854          /* Function:     DrvGPIO_SetPortMask                                                                       */
    855          /*                                                                                                         */
    856          /* Parameter:        																					   */	
    857          /*	             port    	-[in] Specified GPIO port. It could be GPA, GPB , GPC , GPD , GPE              */
    858          /*	             mask    	-[in] The data to mask to the specified IO port.                               */
    859          /* Returns:                                                                                                */
    860          /*               E_SUCCESS   		 Success .                                                             */
    861          /*               E_DRVGPIO_ARGUMENT  Wrong arguments .                                                     */
    862          /* Description:                                                                                            */
    863          /*               To set GPIO port mask register.                                        	     	       */
    864          /*---------------------------------------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    865          int32_t DrvGPIO_SetPortMask(DRVGPIO_PORT port, uint32_t u32Mask)
    866          {
   \                     DrvGPIO_SetPortMask:
   \   00000000   00B5               PUSH     {LR}
    867              if(port > GPE)
   \   00000002   C0B2               UXTB     R0,R0
   \   00000004   0528               CMP      R0,#+5
   \   00000006   01D3               BCC      ??DrvGPIO_SetPortMask_0
    868          		return E_DRVGPIO_ARGUMENT;	
   \   00000008   ....               LDR      R0,??DataTable27  ;; 0xffff8901
   \   0000000A   05E0               B        ??DrvGPIO_SetPortMask_1
    869          
    870              outpw((uint32_t)&GPIOA->DMASK + port * PORT_OFFSET, u32Mask);
   \                     ??DrvGPIO_SetPortMask_0:
   \   0000000C   C0B2               UXTB     R0,R0
   \   0000000E   4022               MOVS     R2,#+64
   \   00000010   5043               MULS     R0,R2,R0
   \   00000012   ....               LDR      R2,??DataTable33  ;; 0x5000400c
   \   00000014   8150               STR      R1,[R0, R2]
    871          
    872              return E_SUCCESS;
   \   00000016   0020               MOVS     R0,#+0
   \                     ??DrvGPIO_SetPortMask_1:
   \   00000018   00BD               POP      {PC}             ;; return
    873          }
    874          
    875          
    876          /*---------------------------------------------------------------------------------------------------------*/
    877          /* Function:     DrvGPIO_SetBitMask                                                                        */
    878          /*                                                                                                         */
    879          /* Parameter:        																					   */	
    880          /*	             port    	-[in] Specified GPIO port. It could be GPA, GPB , GPC , GPD , GPE              */
    881          /*	             i32Bit    	-[in] Specified bit of the IO port. It could be 0~15 .                         */
    882          /* Returns:                                                                                                */
    883          /*               E_SUCCESS   		 Success .                                                             */
    884          /*               E_DRVGPIO_ARGUMENT  Wrong arguments .                                                     */
    885          /* Description:                                                                                            */
    886          /*               To set bits of GPIO port mask                                           	     	       */
    887          /*---------------------------------------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    888          int32_t DrvGPIO_SetBitMask(DRVGPIO_PORT port, int32_t i32Bit)
    889          {
    890          
    891          	outpw((uint32_t)&GPIOA->DMASK+ port*PORT_OFFSET , inpw((uint32_t)&GPIOA->DMASK+ port*PORT_OFFSET) | (1<<i32Bit));
   \                     DrvGPIO_SetBitMask:
   \   00000000   C0B2               UXTB     R0,R0
   \   00000002   4022               MOVS     R2,#+64
   \   00000004   4243               MULS     R2,R0,R2
   \   00000006   ....               LDR      R3,??DataTable33  ;; 0x5000400c
   \   00000008   D258               LDR      R2,[R2, R3]
   \   0000000A   0123               MOVS     R3,#+1
   \   0000000C   8B40               LSLS     R3,R3,R1
   \   0000000E   1343               ORRS     R3,R3,R2
   \   00000010   C0B2               UXTB     R0,R0
   \   00000012   4021               MOVS     R1,#+64
   \   00000014   4843               MULS     R0,R1,R0
   \   00000016   ....               LDR      R1,??DataTable33  ;; 0x5000400c
   \   00000018   4350               STR      R3,[R0, R1]
    892          
    893          	return E_SUCCESS;
   \   0000001A   0020               MOVS     R0,#+0
   \   0000001C   7047               BX       LR               ;; return
    894          }
    895          
    896          
    897          /*---------------------------------------------------------------------------------------------------------*/
    898          /* Function:     DrvGPIO_ClrBitMask                                                                        */
    899          /*                                                                                                         */
    900          /* Parameter:        																					   */	
    901          /*	             port    	-[in] Specified GPIO port. It could be GPA, GPB , GPC , GPD , GPE              */
    902          /*	             i32Bit    	-[in] Specified bit of the IO port. It could be 0~15 .                         */
    903          /* Returns:                                                                                                */
    904          /*               E_SUCCESS   		 Success .                                                             */
    905          /* Description:                                                                                            */
    906          /*               To clear bits of GPIO port mask	                                       	     	       */
    907          /*---------------------------------------------------------------------------------------------------------*/
    908          

   \                                 In section .text, align 2, keep-with-next
    909          int32_t DrvGPIO_ClrBitMask(DRVGPIO_PORT port, uint32_t u32Bit)
    910          {
    911          
    912          	outpw((uint32_t)&GPIOA->DMASK+ port*PORT_OFFSET,inpw((uint32_t)&GPIOA->DMASK+ port*PORT_OFFSET) &(~(1<<u32Bit)));
   \                     DrvGPIO_ClrBitMask:
   \   00000000   C0B2               UXTB     R0,R0
   \   00000002   4022               MOVS     R2,#+64
   \   00000004   4243               MULS     R2,R0,R2
   \   00000006   ....               LDR      R3,??DataTable33  ;; 0x5000400c
   \   00000008   D258               LDR      R2,[R2, R3]
   \   0000000A   0123               MOVS     R3,#+1
   \   0000000C   8B40               LSLS     R3,R3,R1
   \   0000000E   9A43               BICS     R2,R2,R3
   \   00000010   C0B2               UXTB     R0,R0
   \   00000012   4021               MOVS     R1,#+64
   \   00000014   4843               MULS     R0,R1,R0
   \   00000016   ....               LDR      R1,??DataTable33  ;; 0x5000400c
   \   00000018   4250               STR      R2,[R0, R1]
    913          	
    914          	return E_SUCCESS;
   \   0000001A   0020               MOVS     R0,#+0
   \   0000001C   7047               BX       LR               ;; return
    915          }
    916          
    917          
    918          /*---------------------------------------------------------------------------------------------------------*/
    919          /* Function:     DrvGPIO_ReadPortMask                                                                      */
    920          /*                                                                                                         */
    921          /* Parameter:        																					   */	
    922          /*	             port    	-[in] Specified GPIO port. It could be GPA, GPB , GPC , GPD , GPE              */
    923          /* Returns:                                                                                                */
    924          /*               the value of Specified GPIO port mask register .                                          */
    925          /* Description:                                                                                            */
    926          /*               To get current GPIO port mask setting	                                  	     	       */
    927          /*---------------------------------------------------------------------------------------------------------*/
    928          

   \                                 In section .text, align 2, keep-with-next
    929          int32_t DrvGPIO_ReadPortMask(DRVGPIO_PORT port)
    930          {
    931          	return inpw((uint32_t)&GPIOA->DMASK + port * PORT_OFFSET); 
   \                     DrvGPIO_ReadPortMask:
   \   00000000   C0B2               UXTB     R0,R0
   \   00000002   4021               MOVS     R1,#+64
   \   00000004   4843               MULS     R0,R1,R0
   \   00000006   ....               LDR      R1,??DataTable33  ;; 0x5000400c
   \   00000008   4058               LDR      R0,[R0, R1]
   \   0000000A   7047               BX       LR               ;; return
    932          }
    933          
    934          
    935          /*---------------------------------------------------------------------------------------------------------*/
    936          /* Function:     DrvGPIO_EnableInt                                                                         */
    937          /*                                                                                                         */
    938          /* Parameter:        																					   */	
    939          /*	             port    		   -[in] Specified GPIO port. It could be GPA, GPB , GPC , GPD , GPE       */
    940          /*	             u32Bit    	       -[in] Specified bit of the IO port. It could be 0~15.                   */
    941          /*	             DRVGPIO_INT_TYPE  -[in] Specified bit of the IO port. Specified INT type.                 */
    942          /*                                       It could be IO_RISING, IO_FALLING or IO_BOTH_EDGE                 */
    943          /*	             DRVGPIO_INT_MODE  -[in] Specified INT mode.                                               */
    944          /*                                       It could be MODE_EDGE, or MODE_LEVEL                              */
    945          /* Returns:                                                                                                */
    946          /*               E_SUCCESS           Success                                                               */
    947          /*               E_DRVGPIO_ARGUMENT  Wrong arguments                                                       */
    948          /* Description:                                                                                            */
    949          /*               To set one bit of GPIO port to Interrupt type	                                  	       */
    950          /*---------------------------------------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    951          int32_t DrvGPIO_EnableInt(DRVGPIO_PORT port, uint32_t u32Bit, DRVGPIO_INT_TYPE tiggerType, DRVGPIO_INT_MODE mode)
    952          {
   \                     DrvGPIO_EnableInt:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0400               MOVS     R4,R0
    953              if((port == GPB) && ((u32Bit == 14) || (u32Bit == 14)))
   \   00000004   E4B2               UXTB     R4,R4
   \   00000006   012C               CMP      R4,#+1
   \   00000008   05D1               BNE      ??DrvGPIO_EnableInt_0
   \   0000000A   0E29               CMP      R1,#+14
   \   0000000C   01D0               BEQ      ??DrvGPIO_EnableInt_1
   \   0000000E   0E29               CMP      R1,#+14
   \   00000010   01D1               BNE      ??DrvGPIO_EnableInt_0
    954              {
    955                  /* GPB14 is EINT0, GPB15 is EINT1. Both of them can't be assigned to GPAB interrupt */
    956                  return E_DRVGPIO_ARGUMENT;    
   \                     ??DrvGPIO_EnableInt_1:
   \   00000012   ....               LDR      R0,??DataTable27  ;; 0xffff8901
   \   00000014   3FE0               B        ??DrvGPIO_EnableInt_2
    957              }
    958              
    959              /* Configure the interrupt to be rising/falling when edge trigger or high/low level when level trigger */
    960          	if(tiggerType ==IO_RISING)
   \                     ??DrvGPIO_EnableInt_0:
   \   00000016   D2B2               UXTB     R2,R2
   \   00000018   002A               CMP      R2,#+0
   \   0000001A   3DD1               BNE      ??DrvGPIO_EnableInt_3
    961          		outpw((uint32_t)&GPIOA->IEN + port * PORT_OFFSET , inpw((uint32_t)&GPIOA->IEN + port * PORT_OFFSET) | (1<<(u32Bit+16)));	 
   \   0000001C   E4B2               UXTB     R4,R4
   \   0000001E   4020               MOVS     R0,#+64
   \   00000020   6043               MULS     R0,R4,R0
   \   00000022   ....               LDR      R2,??DataTable33_1  ;; 0x5000401c
   \   00000024   8058               LDR      R0,[R0, R2]
   \   00000026   0122               MOVS     R2,#+1
   \   00000028   0D00               MOVS     R5,R1
   \   0000002A   1035               ADDS     R5,R5,#+16
   \   0000002C   AA40               LSLS     R2,R2,R5
   \   0000002E   0243               ORRS     R2,R2,R0
   \   00000030   E4B2               UXTB     R4,R4
   \   00000032   4020               MOVS     R0,#+64
   \   00000034   6043               MULS     R0,R4,R0
   \   00000036   ....               LDR      R5,??DataTable33_1  ;; 0x5000401c
   \   00000038   4251               STR      R2,[R0, R5]
    962          
    963          	else if(tiggerType == IO_FALLING)
    964          		outpw((uint32_t)&GPIOA->IEN + port * PORT_OFFSET , inpw((uint32_t)&GPIOA->IEN + port * PORT_OFFSET) | (1<<u32Bit));	 
    965          
    966          	else if(tiggerType == IO_BOTH_EDGE)  
    967          		outpw((uint32_t)&GPIOA->IEN + port * PORT_OFFSET , inpw((uint32_t)&GPIOA->IEN + port * PORT_OFFSET) | (1<<u32Bit)| (1<<(u32Bit+16)));	 
    968          	else
    969          		return E_DRVGPIO_ARGUMENT;
    970          
    971              /* Configure to be level trigger or edge trigger */
    972          	if(mode ==MODE_EDGE)
   \                     ??DrvGPIO_EnableInt_4:
   \   0000003A   DBB2               UXTB     R3,R3
   \   0000003C   002B               CMP      R3,#+0
   \   0000003E   54D1               BNE      ??DrvGPIO_EnableInt_5
    973          		outpw((uint32_t)&GPIOA->IMD + port*PORT_OFFSET,inpw((uint32_t)&GPIOA->IMD + port*PORT_OFFSET)&(~(1<<u32Bit)));
   \   00000040   E4B2               UXTB     R4,R4
   \   00000042   4020               MOVS     R0,#+64
   \   00000044   6043               MULS     R0,R4,R0
   \   00000046   ....               LDR      R2,??DataTable33_2  ;; 0x50004018
   \   00000048   8058               LDR      R0,[R0, R2]
   \   0000004A   0122               MOVS     R2,#+1
   \   0000004C   8A40               LSLS     R2,R2,R1
   \   0000004E   9043               BICS     R0,R0,R2
   \   00000050   E4B2               UXTB     R4,R4
   \   00000052   4021               MOVS     R1,#+64
   \   00000054   6143               MULS     R1,R4,R1
   \   00000056   ....               LDR      R2,??DataTable33_2  ;; 0x50004018
   \   00000058   8850               STR      R0,[R1, R2]
    974          
    975          	else if(mode ==MODE_LEVEL)
    976          		outpw((uint32_t)&GPIOA->IMD + port*PORT_OFFSET,inpw((uint32_t)&GPIOA->IMD + port*PORT_OFFSET)|(1<<u32Bit));
    977          
    978          	else
    979          		return E_DRVGPIO_ARGUMENT;
    980              
    981              /* Enable the relative interrupt of M0 */
    982              if(port == GPA || port == GPB)
   \                     ??DrvGPIO_EnableInt_6:
   \   0000005A   E4B2               UXTB     R4,R4
   \   0000005C   002C               CMP      R4,#+0
   \   0000005E   02D0               BEQ      ??DrvGPIO_EnableInt_7
   \   00000060   E4B2               UXTB     R4,R4
   \   00000062   012C               CMP      R4,#+1
   \   00000064   06D1               BNE      ??DrvGPIO_EnableInt_8
    983              {
    984                  NVIC_SetPriority (GPAB_IRQn, (1<<__NVIC_PRIO_BITS) - 2);
   \                     ??DrvGPIO_EnableInt_7:
   \   00000066   0221               MOVS     R1,#+2
   \   00000068   0420               MOVS     R0,#+4
   \   0000006A   ........           BL       NVIC_SetPriority
    985                  NVIC_EnableIRQ(GPAB_IRQn);
   \   0000006E   0420               MOVS     R0,#+4
   \   00000070   ........           BL       NVIC_EnableIRQ
    986              }
    987          
    988              if((port == GPC) || (port == GPD) || (port == GPE))
   \                     ??DrvGPIO_EnableInt_8:
   \   00000074   E4B2               UXTB     R4,R4
   \   00000076   022C               CMP      R4,#+2
   \   00000078   05D0               BEQ      ??DrvGPIO_EnableInt_9
   \   0000007A   E4B2               UXTB     R4,R4
   \   0000007C   032C               CMP      R4,#+3
   \   0000007E   02D0               BEQ      ??DrvGPIO_EnableInt_9
   \   00000080   E4B2               UXTB     R4,R4
   \   00000082   042C               CMP      R4,#+4
   \   00000084   06D1               BNE      ??DrvGPIO_EnableInt_10
    989              {
    990                  NVIC_SetPriority (GPCDE_IRQn, (1<<__NVIC_PRIO_BITS) - 2);
   \                     ??DrvGPIO_EnableInt_9:
   \   00000086   0221               MOVS     R1,#+2
   \   00000088   0520               MOVS     R0,#+5
   \   0000008A   ........           BL       NVIC_SetPriority
    991                  NVIC_EnableIRQ(GPCDE_IRQn);
   \   0000008E   0520               MOVS     R0,#+5
   \   00000090   ........           BL       NVIC_EnableIRQ
    992              }    
    993              return E_SUCCESS;
   \                     ??DrvGPIO_EnableInt_10:
   \   00000094   0020               MOVS     R0,#+0
   \                     ??DrvGPIO_EnableInt_2:
   \   00000096   70BD               POP      {R4-R6,PC}       ;; return
   \                     ??DrvGPIO_EnableInt_3:
   \   00000098   D2B2               UXTB     R2,R2
   \   0000009A   012A               CMP      R2,#+1
   \   0000009C   0DD1               BNE      ??DrvGPIO_EnableInt_11
   \   0000009E   E4B2               UXTB     R4,R4
   \   000000A0   4020               MOVS     R0,#+64
   \   000000A2   6043               MULS     R0,R4,R0
   \   000000A4   ....               LDR      R2,??DataTable33_1  ;; 0x5000401c
   \   000000A6   8058               LDR      R0,[R0, R2]
   \   000000A8   0122               MOVS     R2,#+1
   \   000000AA   8A40               LSLS     R2,R2,R1
   \   000000AC   0243               ORRS     R2,R2,R0
   \   000000AE   E4B2               UXTB     R4,R4
   \   000000B0   4020               MOVS     R0,#+64
   \   000000B2   6043               MULS     R0,R4,R0
   \   000000B4   ....               LDR      R5,??DataTable33_1  ;; 0x5000401c
   \   000000B6   4251               STR      R2,[R0, R5]
   \   000000B8   BFE7               B        ??DrvGPIO_EnableInt_4
   \                     ??DrvGPIO_EnableInt_11:
   \   000000BA   D2B2               UXTB     R2,R2
   \   000000BC   022A               CMP      R2,#+2
   \   000000BE   12D1               BNE      ??DrvGPIO_EnableInt_12
   \   000000C0   E4B2               UXTB     R4,R4
   \   000000C2   4020               MOVS     R0,#+64
   \   000000C4   6043               MULS     R0,R4,R0
   \   000000C6   ....               LDR      R2,??DataTable33_1  ;; 0x5000401c
   \   000000C8   8258               LDR      R2,[R0, R2]
   \   000000CA   0125               MOVS     R5,#+1
   \   000000CC   8D40               LSLS     R5,R5,R1
   \   000000CE   0120               MOVS     R0,#+1
   \   000000D0   0E00               MOVS     R6,R1
   \   000000D2   1036               ADDS     R6,R6,#+16
   \   000000D4   B040               LSLS     R0,R0,R6
   \   000000D6   2843               ORRS     R0,R0,R5
   \   000000D8   1043               ORRS     R0,R0,R2
   \   000000DA   E4B2               UXTB     R4,R4
   \   000000DC   4022               MOVS     R2,#+64
   \   000000DE   6243               MULS     R2,R4,R2
   \   000000E0   ....               LDR      R5,??DataTable33_1  ;; 0x5000401c
   \   000000E2   5051               STR      R0,[R2, R5]
   \   000000E4   A9E7               B        ??DrvGPIO_EnableInt_4
   \                     ??DrvGPIO_EnableInt_12:
   \   000000E6   ....               LDR      R0,??DataTable27  ;; 0xffff8901
   \   000000E8   D5E7               B        ??DrvGPIO_EnableInt_2
   \                     ??DrvGPIO_EnableInt_5:
   \   000000EA   DBB2               UXTB     R3,R3
   \   000000EC   012B               CMP      R3,#+1
   \   000000EE   0DD1               BNE      ??DrvGPIO_EnableInt_13
   \   000000F0   E4B2               UXTB     R4,R4
   \   000000F2   4020               MOVS     R0,#+64
   \   000000F4   6043               MULS     R0,R4,R0
   \   000000F6   ....               LDR      R2,??DataTable33_2  ;; 0x50004018
   \   000000F8   8058               LDR      R0,[R0, R2]
   \   000000FA   0122               MOVS     R2,#+1
   \   000000FC   8A40               LSLS     R2,R2,R1
   \   000000FE   0243               ORRS     R2,R2,R0
   \   00000100   E4B2               UXTB     R4,R4
   \   00000102   4020               MOVS     R0,#+64
   \   00000104   6043               MULS     R0,R4,R0
   \   00000106   ....               LDR      R1,??DataTable33_2  ;; 0x50004018
   \   00000108   4250               STR      R2,[R0, R1]
   \   0000010A   A6E7               B        ??DrvGPIO_EnableInt_6
   \                     ??DrvGPIO_EnableInt_13:
   \   0000010C   ....               LDR      R0,??DataTable27  ;; 0xffff8901
   \   0000010E   C2E7               B        ??DrvGPIO_EnableInt_2
    994          }
    995          
    996          
    997          /*---------------------------------------------------------------------------------------------------------*/
    998          /* Function:     DrvGPIO_DisableInt                                                                        */
    999          /*                                                                                                         */
   1000          /* Parameter:        																					   */	
   1001          /*	             port    		   -[in] Specified GPIO port. It could be GPA, GPB , GPC , GPD , GPE       */
   1002          /*	             i16Bit    	       -[in] Specified bit of the IO port. It could be 0~15 .                  */
   1003          /*	             DRVGPIO_INT_TYPE  -[in] Specified bit of the IO port. Specified INT type.                 */
   1004          /*                                       It could be IO_RISING, IO_FALLING and IO_BOTH_EDGE                */
   1005          /* Returns:                                                                                                */
   1006          /*               E_SUCCESS           Success                                                               */
   1007          /*               E_DRVGPIO_ARGUMENT  Wrong arguments                                                       */
   1008          /* Description:                                                                                            */
   1009          /*               To disable the interrupt of specified GPIO bit.                                 	       */
   1010          /*---------------------------------------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1011          int32_t DrvGPIO_DisableInt(DRVGPIO_PORT port,uint32_t u32Bit)
   1012          {
   \                     DrvGPIO_DisableInt:
   \   00000000   00B5               PUSH     {LR}
   1013              uint32_t u32Reg;
   1014          
   1015              if(u32Bit > 31)
   \   00000002   2029               CMP      R1,#+32
   \   00000004   01D3               BCC      ??DrvGPIO_DisableInt_0
   1016                  return E_DRVGPIO_ARGUMENT;
   \   00000006   ....               LDR      R0,??DataTable27  ;; 0xffff8901
   \   00000008   11E0               B        ??DrvGPIO_DisableInt_1
   1017              
   1018              /* Disable both rising/falling or both high level/low level interrupts */
   1019              u32Reg = (1 << u32Bit) | (1 << (u32Bit + 16));
   \                     ??DrvGPIO_DisableInt_0:
   \   0000000A   0123               MOVS     R3,#+1
   \   0000000C   8B40               LSLS     R3,R3,R1
   \   0000000E   0122               MOVS     R2,#+1
   \   00000010   1031               ADDS     R1,R1,#+16
   \   00000012   8A40               LSLS     R2,R2,R1
   \   00000014   1A43               ORRS     R2,R2,R3
   1020              outpw((uint32_t)&GPIOA->IEN + port * PORT_OFFSET , inpw((uint32_t)&GPIOA->IEN + port * PORT_OFFSET) & (~u32Reg));	 
   \   00000016   C0B2               UXTB     R0,R0
   \   00000018   4021               MOVS     R1,#+64
   \   0000001A   4143               MULS     R1,R0,R1
   \   0000001C   ....               LDR      R3,??DataTable33_1  ;; 0x5000401c
   \   0000001E   C958               LDR      R1,[R1, R3]
   \   00000020   9143               BICS     R1,R1,R2
   \   00000022   C0B2               UXTB     R0,R0
   \   00000024   4022               MOVS     R2,#+64
   \   00000026   5043               MULS     R0,R2,R0
   \   00000028   ....               LDR      R2,??DataTable33_1  ;; 0x5000401c
   \   0000002A   8150               STR      R1,[R0, R2]
   1021          
   1022              return E_SUCCESS;
   \   0000002C   0020               MOVS     R0,#+0
   \                     ??DrvGPIO_DisableInt_1:
   \   0000002E   00BD               POP      {PC}             ;; return
   1023          }
   1024          
   1025          

   \                                 In section .text, align 2, keep-with-next
   1026          void DrvGPIO_EnableEINT0(DRVGPIO_INT_TYPE tiggerType, DRVGPIO_INT_MODE mode, GPIO_EINT0_CALLBACK pfEINT0Callback)
   1027          {
   \                     DrvGPIO_EnableEINT0:
   \   00000000   80B5               PUSH     {R7,LR}
   1028              uint32_t u32Reg;
   1029          
   1030          
   1031              u32Reg = inpw((uint32_t)&GPIOA->IEN + GPB * PORT_OFFSET);
   \   00000002   ....               LDR      R1,??DataTable33_3  ;; 0x5000405c
   \   00000004   0968               LDR      R1,[R1, #+0]
   1032          	if(tiggerType ==IO_RISING)
   \   00000006   C0B2               UXTB     R0,R0
   \   00000008   0028               CMP      R0,#+0
   \   0000000A   04D1               BNE      ??DrvGPIO_EnableEINT0_0
   1033              {
   1034                  u32Reg = u32Reg | (1 << (14 + 16));    
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   8021               MOVS     R1,#+128
   \   00000010   C905               LSLS     R1,R1,#+23       ;; #+1073741824
   \   00000012   0143               ORRS     R1,R1,R0
   \   00000014   0DE0               B        ??DrvGPIO_EnableEINT0_1
   1035          	}
   1036              else if(tiggerType == IO_FALLING)
   \                     ??DrvGPIO_EnableEINT0_0:
   \   00000016   C0B2               UXTB     R0,R0
   \   00000018   0128               CMP      R0,#+1
   \   0000001A   04D1               BNE      ??DrvGPIO_EnableEINT0_2
   1037          	{
   1038                  u32Reg = u32Reg | (1 << 14);    
   \   0000001C   0800               MOVS     R0,R1
   \   0000001E   8021               MOVS     R1,#+128
   \   00000020   C901               LSLS     R1,R1,#+7        ;; #+16384
   \   00000022   0143               ORRS     R1,R1,R0
   \   00000024   05E0               B        ??DrvGPIO_EnableEINT0_1
   1039          	}
   1040              else if(tiggerType == IO_BOTH_EDGE)
   \                     ??DrvGPIO_EnableEINT0_2:
   \   00000026   C0B2               UXTB     R0,R0
   \   00000028   0228               CMP      R0,#+2
   \   0000002A   02D1               BNE      ??DrvGPIO_EnableEINT0_1
   1041              {  
   1042                  u32Reg = u32Reg | (1 << 14) | (1 << (14 + 16));    
   \   0000002C   0800               MOVS     R0,R1
   \   0000002E   ....               LDR      R1,??DataTable33_4  ;; 0x40004000
   \   00000030   0143               ORRS     R1,R1,R0
   1043          	}
   1044              
   1045              outpw((uint32_t)&GPIOA->IEN + GPB * PORT_OFFSET , u32Reg);	 
   \                     ??DrvGPIO_EnableEINT0_1:
   \   00000032   ....               LDR      R0,??DataTable33_3  ;; 0x5000405c
   \   00000034   0160               STR      R1,[R0, #+0]
   1046          
   1047              _pfEINT0Callback = pfEINT0Callback;
   \   00000036   ....               LDR      R0,??DataTable33_5  ;; _pfEINT0Callback
   \   00000038   0260               STR      R2,[R0, #+0]
   1048              NVIC_EnableIRQ(EINT0_IRQn);
   \   0000003A   0220               MOVS     R0,#+2
   \   0000003C   ........           BL       NVIC_EnableIRQ
   1049          }
   \   00000040   01BD               POP      {R0,PC}          ;; return
   1050          

   \                                 In section .text, align 2, keep-with-next
   1051          void DrvGPIO_DisableEINT0(void)
   1052          {
   \                     DrvGPIO_DisableEINT0:
   \   00000000   80B5               PUSH     {R7,LR}
   1053              uint32_t u32Reg;
   1054              u32Reg = inpw((uint32_t)&GPIOA->IEN + GPB * PORT_OFFSET);
   \   00000002   ....               LDR      R0,??DataTable33_3  ;; 0x5000405c
   \   00000004   0068               LDR      R0,[R0, #+0]
   1055              u32Reg = u32Reg & (~((1UL << 14) | (1UL << (14 + 16))));
   \   00000006   0100               MOVS     R1,R0
   \   00000008   ....               LDR      R0,??DataTable33_6  ;; 0xbfffbfff
   \   0000000A   0840               ANDS     R0,R0,R1
   1056              outpw((uint32_t)&GPIOA->IEN + GPB * PORT_OFFSET , u32Reg);	 
   \   0000000C   ....               LDR      R1,??DataTable33_3  ;; 0x5000405c
   \   0000000E   0860               STR      R0,[R1, #+0]
   1057              NVIC_DisableIRQ(EINT0_IRQn);
   \   00000010   0220               MOVS     R0,#+2
   \   00000012   ........           BL       NVIC_DisableIRQ
   1058          }
   \   00000016   01BD               POP      {R0,PC}          ;; return
   1059          
   1060          

   \                                 In section .text, align 2, keep-with-next
   1061          void DrvGPIO_EnableEINT1(DRVGPIO_INT_TYPE tiggerType, DRVGPIO_INT_MODE mode, GPIO_EINT1_CALLBACK pfEINT1Callback)
   1062          {
   \                     DrvGPIO_EnableEINT1:
   \   00000000   80B5               PUSH     {R7,LR}
   1063              uint32_t u32Reg;
   1064          
   1065              u32Reg = inpw((uint32_t)&GPIOA->IEN + GPB * PORT_OFFSET);
   \   00000002   ....               LDR      R1,??DataTable33_3  ;; 0x5000405c
   \   00000004   0968               LDR      R1,[R1, #+0]
   1066          	if(tiggerType ==IO_RISING)
   \   00000006   C0B2               UXTB     R0,R0
   \   00000008   0028               CMP      R0,#+0
   \   0000000A   04D1               BNE      ??DrvGPIO_EnableEINT1_0
   1067              {
   1068                  u32Reg = u32Reg | (1UL << (15 + 16));    
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   8021               MOVS     R1,#+128
   \   00000010   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000012   0143               ORRS     R1,R1,R0
   \   00000014   0DE0               B        ??DrvGPIO_EnableEINT1_1
   1069          	}
   1070              else if(tiggerType == IO_FALLING)
   \                     ??DrvGPIO_EnableEINT1_0:
   \   00000016   C0B2               UXTB     R0,R0
   \   00000018   0128               CMP      R0,#+1
   \   0000001A   04D1               BNE      ??DrvGPIO_EnableEINT1_2
   1071          	{
   1072                  u32Reg = u32Reg | (1UL << 15);    
   \   0000001C   0800               MOVS     R0,R1
   \   0000001E   8021               MOVS     R1,#+128
   \   00000020   0902               LSLS     R1,R1,#+8        ;; #+32768
   \   00000022   0143               ORRS     R1,R1,R0
   \   00000024   05E0               B        ??DrvGPIO_EnableEINT1_1
   1073          	}
   1074              else if(tiggerType == IO_BOTH_EDGE)
   \                     ??DrvGPIO_EnableEINT1_2:
   \   00000026   C0B2               UXTB     R0,R0
   \   00000028   0228               CMP      R0,#+2
   \   0000002A   02D1               BNE      ??DrvGPIO_EnableEINT1_1
   1075              {  
   1076                  u32Reg = u32Reg | (1UL << 15) | (1UL << (15 + 16));    
   \   0000002C   0800               MOVS     R0,R1
   \   0000002E   ....               LDR      R1,??DataTable33_7  ;; 0x80008000
   \   00000030   0143               ORRS     R1,R1,R0
   1077          	}
   1078              
   1079              outpw((uint32_t)&GPIOA->IEN + GPB * PORT_OFFSET , u32Reg);	 
   \                     ??DrvGPIO_EnableEINT1_1:
   \   00000032   ....               LDR      R0,??DataTable33_3  ;; 0x5000405c
   \   00000034   0160               STR      R1,[R0, #+0]
   1080              _pfEINT1Callback = pfEINT1Callback;
   \   00000036   ....               LDR      R0,??DataTable33_8  ;; _pfEINT1Callback
   \   00000038   0260               STR      R2,[R0, #+0]
   1081              NVIC_EnableIRQ(EINT1_IRQn);
   \   0000003A   0320               MOVS     R0,#+3
   \   0000003C   ........           BL       NVIC_EnableIRQ
   1082          }
   \   00000040   01BD               POP      {R0,PC}          ;; return
   1083          

   \                                 In section .text, align 2, keep-with-next
   1084          void DrvGPIO_DisableEINT1(void)
   1085          {
   \                     DrvGPIO_DisableEINT1:
   \   00000000   80B5               PUSH     {R7,LR}
   1086              uint32_t u32Reg;
   1087              u32Reg = inpw((uint32_t)&GPIOA->IEN + GPB * PORT_OFFSET);
   \   00000002   ....               LDR      R0,??DataTable33_3  ;; 0x5000405c
   \   00000004   0068               LDR      R0,[R0, #+0]
   1088              u32Reg = u32Reg & (~((1UL << 15) | (1UL << (15 + 16))));
   \   00000006   0100               MOVS     R1,R0
   \   00000008   ....               LDR      R0,??DataTable33_9  ;; 0x7fff7fff
   \   0000000A   0840               ANDS     R0,R0,R1
   1089              outpw((uint32_t)&GPIOA->IEN + GPB * PORT_OFFSET , u32Reg);	 
   \   0000000C   ....               LDR      R1,??DataTable33_3  ;; 0x5000405c
   \   0000000E   0860               STR      R0,[R1, #+0]
   1090              NVIC_DisableIRQ(EINT1_IRQn);
   \   00000010   0320               MOVS     R0,#+3
   \   00000012   ........           BL       NVIC_DisableIRQ
   1091          }
   \   00000016   01BD               POP      {R0,PC}          ;; return
   1092          
   1093          
   1094          /*---------------------------------------------------------------------------------------------------------*/
   1095          /* Function:     DrvGPIO_GetIntStatus                                                                      */
   1096          /*                                                                                                         */
   1097          /* Parameter:        																					   */	
   1098          /*	             port    		   -[in] Specified GPIO port. It could be GPA, GPB , GPC , GPD , GPE       */
   1099          /* Returns:                                                                                                */
   1100          /*               A value to the GPIO interrupt status register                                             */
   1101          /* Description:                                                                                            */
   1102          /*               This function is used to return a value to the GPIO interrupt status register.    	       */
   1103          /*---------------------------------------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1104          uint32_t DrvGPIO_GetIntStatus(DRVGPIO_PORT port)
   1105          {
   \                     DrvGPIO_GetIntStatus:
   \   00000000   00B5               PUSH     {LR}
   1106              uint32_t u32Reg;
   1107          	
   1108          	if(port == GPA)
   \   00000002   C0B2               UXTB     R0,R0
   \   00000004   0028               CMP      R0,#+0
   \   00000006   02D1               BNE      ??DrvGPIO_GetIntStatus_0
   1109          		u32Reg = GPIOA->ISRC;
   \   00000008   ....               LDR      R0,??DataTable33_10  ;; 0x50004020
   \   0000000A   0068               LDR      R0,[R0, #+0]
   1110          	else if(port == GPB)
   1111          		u32Reg = GPIOB->ISRC;
   1112          	else if(port == GPC)
   1113          		u32Reg = GPIOC->ISRC;
   1114          	else if(port == GPD)
   1115          		u32Reg = GPIOD->ISRC;
   1116          	else if(port == GPE)
   1117          		u32Reg = GPIOE->ISRC;
   1118          	else
   1119          		return E_DRVGPIO_ARGUMENT;
   1120          	return u32Reg;
   \                     ??DrvGPIO_GetIntStatus_1:
   \                     ??DrvGPIO_GetIntStatus_2:
   \   0000000C   00BD               POP      {PC}             ;; return
   \                     ??DrvGPIO_GetIntStatus_0:
   \   0000000E   C0B2               UXTB     R0,R0
   \   00000010   0128               CMP      R0,#+1
   \   00000012   02D1               BNE      ??DrvGPIO_GetIntStatus_3
   \   00000014   ....               LDR      R0,??DataTable33_11  ;; 0x50004060
   \   00000016   0068               LDR      R0,[R0, #+0]
   \   00000018   F8E7               B        ??DrvGPIO_GetIntStatus_1
   \                     ??DrvGPIO_GetIntStatus_3:
   \   0000001A   C0B2               UXTB     R0,R0
   \   0000001C   0228               CMP      R0,#+2
   \   0000001E   02D1               BNE      ??DrvGPIO_GetIntStatus_4
   \   00000020   ....               LDR      R0,??DataTable33_12  ;; 0x500040a0
   \   00000022   0068               LDR      R0,[R0, #+0]
   \   00000024   F2E7               B        ??DrvGPIO_GetIntStatus_1
   \                     ??DrvGPIO_GetIntStatus_4:
   \   00000026   C0B2               UXTB     R0,R0
   \   00000028   0328               CMP      R0,#+3
   \   0000002A   02D1               BNE      ??DrvGPIO_GetIntStatus_5
   \   0000002C   ....               LDR      R0,??DataTable33_13  ;; 0x500040e0
   \   0000002E   0068               LDR      R0,[R0, #+0]
   \   00000030   ECE7               B        ??DrvGPIO_GetIntStatus_1
   \                     ??DrvGPIO_GetIntStatus_5:
   \   00000032   C0B2               UXTB     R0,R0
   \   00000034   0428               CMP      R0,#+4
   \   00000036   02D1               BNE      ??DrvGPIO_GetIntStatus_6
   \   00000038   ....               LDR      R0,??DataTable33_14  ;; 0x50004120
   \   0000003A   0068               LDR      R0,[R0, #+0]
   \   0000003C   E6E7               B        ??DrvGPIO_GetIntStatus_1
   \                     ??DrvGPIO_GetIntStatus_6:
   \   0000003E   ....               LDR      R0,??DataTable33_15  ;; 0xffff8901
   \   00000040   E4E7               B        ??DrvGPIO_GetIntStatus_2
   1121          }
   1122          
   1123          
   1124          /*---------------------------------------------------------------------------------------------------------*/
   1125          /* Function:     DrvGPIO_GetVersion                                                                        */
   1126          /*                                                                                                         */
   1127          /* Parameter:        																					   */	
   1128          /*	             None                                                                                      */
   1129          /* Returns:                                                                                                */
   1130          /*               None                                                                                      */
   1131          /* Description:                                                                                            */
   1132          /*               This function is used to return the version number of GPIO driver.    	                   */
   1133          /*---------------------------------------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1134          int32_t DrvGPIO_GetVersion (void)
   1135          {
   1136             return DRVGPIO_VERSION_NUM;
   \                     DrvGPIO_GetVersion:
   \   00000000   ....               LDR      R0,??DataTable33_16  ;; 0x10001
   \   00000002   7047               BX       LR               ;; return
   1137          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   00E100E0           DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   80E100E0           DC32     0xe000e180

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   1CED00E0           DC32     0xe000ed1c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   00E400E0           DC32     0xe000e400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   20400050           DC32     0x50004020

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   60400050           DC32     0x50004060

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   ........           DC32     _pfGPABCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   A0400050           DC32     0x500040a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \   00000000   E0400050           DC32     0x500040e0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \   00000000   20410050           DC32     0x50004120

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_10:
   \   00000000   ........           DC32     _pfGPCDECallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_11:
   \   00000000   ........           DC32     _pfEINT0Callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_12:
   \   00000000   ........           DC32     _pfEINT1Callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   FFFEFFFF           DC32     0xfffffeff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \   00000000   38000050           DC32     0x50000038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   3C000050           DC32     0x5000003c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   30000050           DC32     0x50000030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_1:
   \   00000000   50000050           DC32     0x50000050

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   0189FFFF           DC32     0xffff8901

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   00400050           DC32     0x50004000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   80410050           DC32     0x50004180

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   08400050           DC32     0x50004008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24:
   \   00000000   48400050           DC32     0x50004048

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25:
   \   00000000   88400050           DC32     0x50004088

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_1:
   \   00000000   C8400050           DC32     0x500040c8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_2:
   \   00000000   08410050           DC32     0x50004108

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_3:
   \   00000000   10400050           DC32     0x50004010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27:
   \   00000000   0189FFFF           DC32     0xffff8901

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30:
   \   00000000   80410050           DC32     0x50004180

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   14400050           DC32     0x50004014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33:
   \   00000000   0C400050           DC32     0x5000400c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_1:
   \   00000000   1C400050           DC32     0x5000401c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_2:
   \   00000000   18400050           DC32     0x50004018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_3:
   \   00000000   5C400050           DC32     0x5000405c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_4:
   \   00000000   00400040           DC32     0x40004000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_5:
   \   00000000   ........           DC32     _pfEINT0Callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_6:
   \   00000000   FFBFFFBF           DC32     0xbfffbfff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_7:
   \   00000000   00800080           DC32     0x80008000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_8:
   \   00000000   ........           DC32     _pfEINT1Callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_9:
   \   00000000   FF7FFF7F           DC32     0x7fff7fff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_10:
   \   00000000   20400050           DC32     0x50004020

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_11:
   \   00000000   60400050           DC32     0x50004060

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_12:
   \   00000000   A0400050           DC32     0x500040a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_13:
   \   00000000   E0400050           DC32     0x500040e0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_14:
   \   00000000   20410050           DC32     0x50004120

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_15:
   \   00000000   0189FFFF           DC32     0xffff8901

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_16:
   \   00000000   01000100           DC32     0x10001
   1138          
   1139          

   Maximum stack usage in bytes:

     Function                .cstack
     --------                -------
     DrvGPIO_Close                8
     DrvGPIO_ClrBit               4
     DrvGPIO_ClrBitMask           0
     DrvGPIO_DisableDebounce      4
     DrvGPIO_DisableEINT0         8
     DrvGPIO_DisableEINT1         8
     DrvGPIO_DisableInt           4
     DrvGPIO_EnableDebounce       4
     DrvGPIO_EnableEINT0          8
     DrvGPIO_EnableEINT1          8
     DrvGPIO_EnableInt           16
     DrvGPIO_GetBit               4
     DrvGPIO_GetDebounceTime      4
     DrvGPIO_GetDoutBit           4
     DrvGPIO_GetIntStatus         4
     DrvGPIO_GetPortBits          4
     DrvGPIO_GetPortDoutBits      4
     DrvGPIO_GetVersion           0
     DrvGPIO_InitFunction         4
     DrvGPIO_Open                12
     DrvGPIO_ReadPortMask         0
     DrvGPIO_SetBit               4
     DrvGPIO_SetBitMask           0
     DrvGPIO_SetDebounceTime      4
     DrvGPIO_SetIntCallback       0
     DrvGPIO_SetPortBits          4
     DrvGPIO_SetPortMask          4
     EINT0_IRQHandler             8
     EINT1_IRQHandler             8
     GPAB_IRQHandler              8
     GPCDE_IRQHandler             8
     NVIC_DisableIRQ              0
     NVIC_EnableIRQ               0
     NVIC_SetPriority            20


   Section sizes:

     Function/Label          Bytes
     --------------          -----
     NVIC_EnableIRQ            24
     NVIC_DisableIRQ           24
     NVIC_SetPriority         140
     _pfGPABCallback            4
     _pfGPCDECallback           4
     _pfEINT0Callback           4
     _pfEINT1Callback           4
     GPAB_IRQHandler           34
     GPCDE_IRQHandler          42
     EINT0_IRQHandler          26
     EINT1_IRQHandler          26
     DrvGPIO_SetIntCallback    10
     DrvGPIO_InitFunction    1460
     DrvGPIO_Close             60
     DrvGPIO_Open             278
     DrvGPIO_SetPortBits      102
     DrvGPIO_GetPortBits       26
     DrvGPIO_GetBit            46
     DrvGPIO_SetBit           140
     DrvGPIO_ClrBit            48
     DrvGPIO_GetDoutBit        44
     DrvGPIO_GetPortDoutBits   24
     DrvGPIO_SetDebounceTime   52
     DrvGPIO_GetDebounceTime   18
     DrvGPIO_EnableDebounce    40
     DrvGPIO_DisableDebounce   42
     DrvGPIO_SetPortMask       26
     DrvGPIO_SetBitMask        30
     DrvGPIO_ClrBitMask        30
     DrvGPIO_ReadPortMask      12
     DrvGPIO_EnableInt        272
     DrvGPIO_DisableInt        48
     DrvGPIO_EnableEINT0       66
     DrvGPIO_DisableEINT0      24
     DrvGPIO_EnableEINT1       66
     DrvGPIO_DisableEINT1      24
     DrvGPIO_GetIntStatus      66
     DrvGPIO_GetVersion         4
     ??DataTable7               4
     ??DataTable7_1             4
     ??DataTable7_2             4
     ??DataTable7_3             4
     ??DataTable7_4             4
     ??DataTable7_5             4
     ??DataTable7_6             4
     ??DataTable7_7             4
     ??DataTable7_8             4
     ??DataTable7_9             4
     ??DataTable7_10            4
     ??DataTable7_11            4
     ??DataTable7_12            4
     ??DataTable10              4
     ??DataTable10_1            4
     ??DataTable12              4
     ??DataTable13              4
     ??DataTable13_1            4
     ??DataTable14              4
     ??DataTable15              4
     ??DataTable16              4
     ??DataTable23              4
     ??DataTable24              4
     ??DataTable25              4
     ??DataTable25_1            4
     ??DataTable25_2            4
     ??DataTable25_3            4
     ??DataTable27              4
     ??DataTable30              4
     ??DataTable31              4
     ??DataTable33              4
     ??DataTable33_1            4
     ??DataTable33_2            4
     ??DataTable33_3            4
     ??DataTable33_4            4
     ??DataTable33_5            4
     ??DataTable33_6            4
     ??DataTable33_7            4
     ??DataTable33_8            4
     ??DataTable33_9            4
     ??DataTable33_10           4
     ??DataTable33_11           4
     ??DataTable33_12           4
     ??DataTable33_13           4
     ??DataTable33_14           4
     ??DataTable33_15           4
     ??DataTable33_16           4

 
    16 bytes in section .bss
 3 562 bytes in section .text
 
 3 562 bytes of CODE memory
    16 bytes of DATA memory

Errors: none
Warnings: none
